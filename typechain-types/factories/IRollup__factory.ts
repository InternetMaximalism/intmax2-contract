/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IRollup, IRollupInterface } from "../IRollup";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
    ],
    name: "BlockBuilderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "prevBlockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "blockContentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositRoot",
        type: "bytes32",
      },
    ],
    name: "BlockPosted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
    ],
    name: "getBlockBuilder",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "blockBuilderUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastBlockTime",
            type: "uint256",
          },
        ],
        internalType: "struct IRollup.BlockBuilderInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stopBlockBuilder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "updateBlockBuilder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "depositRoot",
        type: "bytes32",
      },
    ],
    name: "updateDepositRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRollup__factory {
  static readonly abi = _abi;
  static createInterface(): IRollupInterface {
    return new utils.Interface(_abi) as IRollupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRollup {
    return new Contract(address, _abi, signerOrProvider) as IRollup;
  }
}
