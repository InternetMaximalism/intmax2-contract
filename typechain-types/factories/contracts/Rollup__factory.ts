/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Rollup, RollupInterface } from "../../contracts/Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidityContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockBuilderRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "prevBlockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "BlockPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
    ],
    name: "DepositsProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "withdrawalRequest",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAggregator",
        type: "address",
      },
    ],
    name: "WithdrawRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "_blockBuilderRegistry",
    outputs: [
      {
        internalType: "contract IBlockBuilderRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_liquidityContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_scrollMessenger",
    outputs: [
      {
        internalType: "contract IScrollMessenger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedWIthdrawalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isRegistrationBlock",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "txTreeRoot",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "senderFlags",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "publicKeysHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "accountIdsHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "aggregatedPublicKey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "aggregatedSignature",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[4]",
        name: "messagePoint",
        type: "uint256[4]",
      },
    ],
    name: "postBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IRollup.Withdrawal[]",
        name: "withdrawalRequests",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "publicInputs",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "postWithdrawRequests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "recipientSaltHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidity.Deposit[]",
        name: "deposits",
        type: "tuple[]",
      },
    ],
    name: "processDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedWithdrawId",
        type: "uint256",
      },
    ],
    name: "submitWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200148138038062001481833981810160405281019062000037919062000198565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056000801b9080600181540180825580915050600190039060005260206000200160009091909190915055505050620001f4565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001608262000133565b9050919050565b620001728162000153565b81146200017e57600080fd5b50565b600081519050620001928162000167565b92915050565b600080600060608486031215620001b457620001b36200012e565b5b6000620001c48682870162000181565b9350506020620001d78682870162000181565b9250506040620001ea8682870162000181565b9150509250925092565b61127d80620002046000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063892a694011610066578063892a694014610149578063a9f6458f14610165578063aa8fc35b14610183578063d2b210a1146101a1578063d6e4602d146101d15761009e565b8063045d9610146100a3578063048de2f6146100c157806348253b7a146100df5780636e0e48731461010f57806388f1472b1461012b575b600080fd5b6100ab6101ed565b6040516100b89190610662565b60405180910390f35b6100c9610213565b6040516100d69190610696565b60405180910390f35b6100f960048036038101906100f491906107ba565b61021d565b604051610106919061088a565b60405180910390f35b610129600480360381019061012491906109b1565b610407565b005b6101336104cb565b604051610140919061088a565b60405180910390f35b610163600480360381019061015e9190610abb565b6104d5565b005b61016d610520565b60405161017a9190610b67565b60405180910390f35b61018b610546565b6040516101989190610ba3565b60405180910390f35b6101bb60048036038101906101b69190610bfa565b61056a565b6040516101c89190610696565b60405180910390f35b6101eb60048036038101906101e69190610c53565b610598565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600354905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a5387a8336040518263ffffffff1660e01b815260040161027a9190610662565b602060405180830381865afa158015610297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bb9190610c95565b6102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f190610d1f565b60405180910390fd5b6000898989898989898960405160200161031b989796959493929190610e07565b60405160208183030381529060405280519060200120905060058054905091506000600560018461034c9190610ec8565b8154811061035d5761035c610efc565b5b9060005260206000200154905060006003549050600561037f838386886105a2565b90806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827fe27163b76905dc373b4ad854ddc9403bbac659c5f1c5191c39e5a7c44574040a8684876040516103f093929190610f2b565b60405180910390a350505098975050505050505050565b60008060001b905060005b8787905081101561048957600761045089898481811061043557610434610efc565b5b90506080020180360381019061044b9190611097565b6105db565b90806001815401808255809150506001900390600052602060002001600090919091909150558080610481906110c4565b915050610412565b50807f0e3e90af4fd393b8486d674b4f90f884aea927619dbfb8458b4a732d9f7694f0336040516104ba9190610662565b60405180910390a250505050505050565b6000600654905090565b60008060001b9050806003819055507f22ab6afd5caf53c894a7bb125d98ba16962ef2986041d88192b54e81ed84a103816040516105139190610696565b60405180910390a1505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060058263ffffffff168154811061058657610585610efc565b5b90600052602060002001549050919050565b8060068190555050565b6000848484846040516020016105bb949392919061112d565b604051602081830303815290604052805190602001209050949350505050565b6000816000015182602001518360400151846060015160405160200161060494939291906111f9565b604051602081830303815290604052805190602001209050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061064c82610621565b9050919050565b61065c81610641565b82525050565b60006020820190506106776000830184610653565b92915050565b6000819050919050565b6106908161067d565b82525050565b60006020820190506106ab6000830184610687565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b6106da816106c5565b81146106e557600080fd5b50565b6000813590506106f7816106d1565b92915050565b6107068161067d565b811461071157600080fd5b50565b600081359050610723816106fd565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61074e81610729565b811461075957600080fd5b50565b60008135905061076b81610745565b92915050565b600080fd5b60008190508260206002028201111561079257610791610771565b5b92915050565b6000819050826020600402820111156107b4576107b3610771565b5b92915050565b6000806000806000806000806101e0898b0312156107db576107da6106bb565b5b60006107e98b828c016106e8565b98505060206107fa8b828c01610714565b975050604061080b8b828c0161075c565b965050606061081c8b828c01610714565b955050608061082d8b828c01610714565b94505060a061083e8b828c01610776565b93505060e061084f8b828c01610798565b9250506101606108618b828c01610798565b9150509295985092959890939650565b6000819050919050565b61088481610871565b82525050565b600060208201905061089f600083018461087b565b92915050565b600080fd5b600080fd5b60008083601f8401126108c5576108c46108a5565b5b8235905067ffffffffffffffff8111156108e2576108e16108aa565b5b6020830191508360808202830111156108fe576108fd610771565b5b9250929050565b60008083601f84011261091b5761091a6108a5565b5b8235905067ffffffffffffffff811115610938576109376108aa565b5b60208301915083602082028301111561095457610953610771565b5b9250929050565b60008083601f840112610971576109706108a5565b5b8235905067ffffffffffffffff81111561098e5761098d6108aa565b5b6020830191508360018202830111156109aa576109a9610771565b5b9250929050565b600080600080600080606087890312156109ce576109cd6106bb565b5b600087013567ffffffffffffffff8111156109ec576109eb6106c0565b5b6109f889828a016108af565b9650965050602087013567ffffffffffffffff811115610a1b57610a1a6106c0565b5b610a2789828a01610905565b9450945050604087013567ffffffffffffffff811115610a4a57610a496106c0565b5b610a5689828a0161095b565b92509250509295509295509295565b60008083601f840112610a7b57610a7a6108a5565b5b8235905067ffffffffffffffff811115610a9857610a976108aa565b5b602083019150836060820283011115610ab457610ab3610771565b5b9250929050565b60008060208385031215610ad257610ad16106bb565b5b600083013567ffffffffffffffff811115610af057610aef6106c0565b5b610afc85828601610a65565b92509250509250929050565b6000819050919050565b6000610b2d610b28610b2384610621565b610b08565b610621565b9050919050565b6000610b3f82610b12565b9050919050565b6000610b5182610b34565b9050919050565b610b6181610b46565b82525050565b6000602082019050610b7c6000830184610b58565b92915050565b6000610b8d82610b34565b9050919050565b610b9d81610b82565b82525050565b6000602082019050610bb86000830184610b94565b92915050565b600063ffffffff82169050919050565b610bd781610bbe565b8114610be257600080fd5b50565b600081359050610bf481610bce565b92915050565b600060208284031215610c1057610c0f6106bb565b5b6000610c1e84828501610be5565b91505092915050565b610c3081610871565b8114610c3b57600080fd5b50565b600081359050610c4d81610c27565b92915050565b600060208284031215610c6957610c686106bb565b5b6000610c7784828501610c3e565b91505092915050565b600081519050610c8f816106d1565b92915050565b600060208284031215610cab57610caa6106bb565b5b6000610cb984828501610c80565b91505092915050565b600082825260208201905092915050565b7f426c6f636b206275696c646572206973206e6f742076616c6964000000000000600082015250565b6000610d09601a83610cc2565b9150610d1482610cd3565b602082019050919050565b60006020820190508181036000830152610d3881610cfc565b9050919050565b60008160f81b9050919050565b6000610d5782610d3f565b9050919050565b6000610d6982610d4c565b9050919050565b610d81610d7c826106c5565b610d5e565b82525050565b6000819050919050565b610da2610d9d8261067d565b610d87565b82525050565b60008160801b9050919050565b6000610dc082610da8565b9050919050565b610dd8610dd382610729565b610db5565b82525050565b82818337505050565b610df360408383610dde565b5050565b610e0360808383610dde565b5050565b6000610e13828b610d70565b600182019150610e23828a610d91565b602082019150610e338289610dc7565b601082019150610e438288610d91565b602082019150610e538287610d91565b602082019150610e638286610de7565b604082019150610e738285610df7565b608082019150610e838284610df7565b6080820191508190509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ed382610871565b9150610ede83610871565b9250828203905081811115610ef657610ef5610e99565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000606082019050610f40600083018661087b565b610f4d6020830185610687565b610f5a6040830184610687565b949350505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fb082610f67565b810181811067ffffffffffffffff82111715610fcf57610fce610f78565b5b80604052505050565b6000610fe26106b1565b9050610fee8282610fa7565b919050565b610ffc81610641565b811461100757600080fd5b50565b60008135905061101981610ff3565b92915050565b60006080828403121561103557611034610f62565b5b61103f6080610fd8565b9050600061104f8482850161100a565b600083015250602061106384828501610be5565b602083015250604061107784828501610c3e565b604083015250606061108b84828501610714565b60608301525092915050565b6000608082840312156110ad576110ac6106bb565b5b60006110bb8482850161101f565b91505092915050565b60006110cf82610871565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361110157611100610e99565b5b600182019050919050565b6000819050919050565b61112761112282610871565b61110c565b82525050565b60006111398287610d91565b6020820191506111498286610d91565b6020820191506111598285610d91565b6020820191506111698284611116565b60208201915081905095945050505050565b60008160601b9050919050565b60006111938261117b565b9050919050565b60006111a582611188565b9050919050565b6111bd6111b882610641565b61119a565b82525050565b60008160e01b9050919050565b60006111db826111c3565b9050919050565b6111f36111ee82610bbe565b6111d0565b82525050565b600061120582876111ac565b60148201915061121582866111e2565b6004820191506112258285611116565b6020820191506112358284610d91565b6020820191508190509594505050505056fea26469706673582212206cabeb87d8baad35100f45ad43b4f24d570520eebfb14533c9f0d4de2ccb352364736f6c63430008140033";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    scrollMessenger: PromiseOrValue<string>,
    liquidityContract: PromiseOrValue<string>,
    blockBuilderRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Rollup> {
    return super.deploy(
      scrollMessenger,
      liquidityContract,
      blockBuilderRegistry,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    scrollMessenger: PromiseOrValue<string>,
    liquidityContract: PromiseOrValue<string>,
    blockBuilderRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      scrollMessenger,
      liquidityContract,
      blockBuilderRegistry,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
