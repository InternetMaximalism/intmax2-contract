/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Rollup, RollupInterface } from "../../contracts/Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "verifierAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FraudProofAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalProofVerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "BlockFraudProofSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "prevBlockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "BlockPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
    ],
    name: "DepositsProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "withdrawalRequest",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawalAggregator",
        type: "address",
      },
    ],
    name: "WithdrawRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "_blockBuilderRegistryContract",
    outputs: [
      {
        internalType: "contract IBlockBuilderRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_liquidityContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_scrollMessenger",
    outputs: [
      {
        internalType: "contract IScrollMessenger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_verifierAddress",
    outputs: [
      {
        internalType: "contract IPlonkVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedDepositId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedWithdrawalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isRegistrationBlock",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "txTreeRoot",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "senderFlags",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "publicKeysHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "accountIdsHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "aggregatedPublicKey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "aggregatedSignature",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[4]",
        name: "messagePoint",
        type: "uint256[4]",
      },
    ],
    name: "postBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IRollup.Withdrawal[]",
        name: "withdrawalRequests",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "withdrawalTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "withdrawalAggregator",
            type: "address",
          },
        ],
        internalType: "struct IRollup.WithdrawalProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "postWithdrawalRequests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedDepositId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "depositHashes",
        type: "bytes32[]",
      },
    ],
    name: "processDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "blockBuilder",
            type: "address",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct IRollup.FraudProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitBlockFraudProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedWithdrawId",
        type: "uint256",
      },
    ],
    name: "submitWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "liquidityContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockBuilderRegistryContract",
        type: "address",
      },
    ],
    name: "updateDependentContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eb338038062001eb383398181016040528101906200003791906200016c565b6200004982826200005160201b60201c565b5050620001b3565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060066000801b90806001815401808255809150506001900390600052602060002001600090919091909150555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001348262000107565b9050919050565b620001468162000127565b81146200015257600080fd5b50565b60008151905062000166816200013b565b92915050565b6000806040838503121562000186576200018562000102565b5b6000620001968582860162000155565b9250506020620001a98582860162000155565b9150509250929050565b611cf080620001c36000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063d2b210a11161008c578063dd4d4e8911610066578063dd4d4e8914610239578063eb8d5d2314610257578063eeedfc0514610273578063f03efa3714610291576100ea565b8063d2b210a1146101cf578063d6e4602d146101ff578063dcaad4281461021b576100ea565b806348253b7a116100c857806348253b7a146101475780637907240714610177578063aa8fc35b14610193578063c2ddc0c6146101b1576100ea565b8063045d9610146100ef578063048de2f61461010d57806311f0f60e1461012b575b600080fd5b6100f76102ad565b6040516101049190610ce8565b60405180910390f35b6101156102d3565b6040516101229190610d1c565b60405180910390f35b61014560048036038101906101409190610d77565b6102dd565b005b610161600480360381019061015c9190610eac565b610363565b60405161016e9190610f7c565b60405180910390f35b610191600480360381019061018c9190611071565b61054d565b005b61019b610707565b6040516101a89190611165565b60405180910390f35b6101b961072b565b6040516101c691906111a1565b60405180910390f35b6101e960048036038101906101e491906111f8565b610751565b6040516101f69190610d1c565b60405180910390f35b61021960048036038101906102149190611251565b61077f565b005b610223610789565b604051610230919061129f565b60405180910390f35b6102416107af565b60405161024e9190610f7c565b60405180910390f35b610271600480360381019061026c91906112d9565b6107b9565b005b61027b610aa0565b6040516102889190610f7c565b60405180910390f35b6102ab60048036038101906102a6919061138f565b610aaa565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454905090565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a5387a8336040518263ffffffff1660e01b81526004016103c09190610ce8565b602060405180830381865afa1580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104019190611404565b610440576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104379061148e565b60405180910390fd5b60008989898989898989604051602001610461989796959493929190611576565b6040516020818303038152906040528051906020012090506006805490509150600060066001846104929190611637565b815481106104a3576104a261166b565b5b906000526020600020015490506000600454905060066104c583838688610afd565b90806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827fe27163b76905dc373b4ad854ddc9403bbac659c5f1c5191c39e5a7c44574040a8684876040516105369392919061169a565b60405180910390a350505098975050505050505050565b60006105688480360381019061056391906117b2565b610b36565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a84846105b385610b70565b6040518463ffffffff1660e01b81526004016105d1939291906118ea565b602060405180830381865afa1580156105ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106129190611404565b610648576040517f38a3efc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008460000135905060005b878790508110156106c55760086106928989848181106106775761067661166b565b5b90506080020180360381019061068d919061199b565b610c1b565b90806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050610654565b50807f0e3e90af4fd393b8486d674b4f90f884aea927619dbfb8458b4a732d9f7694f0336040516106f69190610ce8565b60405180910390a250505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060068263ffffffff168154811061076d5761076c61166b565b5b90600052602060002001549050919050565b8060078190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600954905090565b600a60008460200160208101906107d091906111f8565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff161561082f576040517f94009bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061084a848036038101906108459190611a40565b610c61565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a848461089585610b70565b6040518463ffffffff1660e01b81526004016108b3939291906118ea565b602060405180830381865afa1580156108d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f49190611404565b61092a576040517f55d979c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a600086602001602081019061094391906111f8565b63ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663750d38cb8560400160208101906109c59190611a6d565b336040518363ffffffff1660e01b81526004016109e3929190611a9a565b600060405180830381600087803b1580156109fd57600080fd5b505af1158015610a11573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff16846040016020810190610a3f9190611a6d565b73ffffffffffffffffffffffffffffffffffffffff16856020016020810190610a6891906111f8565b63ffffffff167fa2d160ed24716f0240546105d30a2e1efb2d5f23abb041888083bcc20083edd260405160405180910390a450505050565b6000600754905090565b60008060001b905080600481905550836009819055507f22ab6afd5caf53c894a7bb125d98ba16962ef2986041d88192b54e81ed84a10381604051610aef9190610d1c565b60405180910390a150505050565b600084848484604051602001610b169493929190611ae4565b604051602081830303815290604052805190602001209050949350505050565b600081600001518260200151604051602001610b53929190611b7a565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff811115610b8f57610b8e6116e7565b5b604051908082528060200260200182016040528015610bbd5781602001602082028036833780820191505090505b50905060005b6008811015610c1157602081610bd99190611ba6565b84901b60e01c63ffffffff16828281518110610bf857610bf761166b565b5b6020026020010181815250508080600101915050610bc3565b5080915050919050565b60008160000151826020015183604001518460600151604051602001610c449493929190611c1e565b604051602081830303815290604052805190602001209050919050565b60008160000151826020015183604001518460600151604051602001610c8a9493929190611c6c565b604051602081830303815290604052805190602001209050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cd282610ca7565b9050919050565b610ce281610cc7565b82525050565b6000602082019050610cfd6000830184610cd9565b92915050565b6000819050919050565b610d1681610d03565b82525050565b6000602082019050610d316000830184610d0d565b92915050565b6000604051905090565b600080fd5b600080fd5b610d5481610cc7565b8114610d5f57600080fd5b50565b600081359050610d7181610d4b565b92915050565b60008060408385031215610d8e57610d8d610d41565b5b6000610d9c85828601610d62565b9250506020610dad85828601610d62565b9150509250929050565b60008115159050919050565b610dcc81610db7565b8114610dd757600080fd5b50565b600081359050610de981610dc3565b92915050565b610df881610d03565b8114610e0357600080fd5b50565b600081359050610e1581610def565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b610e4081610e1b565b8114610e4b57600080fd5b50565b600081359050610e5d81610e37565b92915050565b600080fd5b600081905082602060020282011115610e8457610e83610e63565b5b92915050565b600081905082602060040282011115610ea657610ea5610e63565b5b92915050565b6000806000806000806000806101e0898b031215610ecd57610ecc610d41565b5b6000610edb8b828c01610dda565b9850506020610eec8b828c01610e06565b9750506040610efd8b828c01610e4e565b9650506060610f0e8b828c01610e06565b9550506080610f1f8b828c01610e06565b94505060a0610f308b828c01610e68565b93505060e0610f418b828c01610e8a565b925050610160610f538b828c01610e8a565b9150509295985092959890939650565b6000819050919050565b610f7681610f63565b82525050565b6000602082019050610f916000830184610f6d565b92915050565b600080fd5b600080fd5b60008083601f840112610fb757610fb6610f97565b5b8235905067ffffffffffffffff811115610fd457610fd3610f9c565b5b602083019150836080820283011115610ff057610fef610e63565b5b9250929050565b600080fd5b60006040828403121561101257611011610ff7565b5b81905092915050565b60008083601f84011261103157611030610f97565b5b8235905067ffffffffffffffff81111561104e5761104d610f9c565b5b60208301915083600182028301111561106a57611069610e63565b5b9250929050565b60008060008060006080868803121561108d5761108c610d41565b5b600086013567ffffffffffffffff8111156110ab576110aa610d46565b5b6110b788828901610fa1565b955095505060206110ca88828901610ffc565b935050606086013567ffffffffffffffff8111156110eb576110ea610d46565b5b6110f78882890161101b565b92509250509295509295909350565b6000819050919050565b600061112b61112661112184610ca7565b611106565b610ca7565b9050919050565b600061113d82611110565b9050919050565b600061114f82611132565b9050919050565b61115f81611144565b82525050565b600060208201905061117a6000830184611156565b92915050565b600061118b82611132565b9050919050565b61119b81611180565b82525050565b60006020820190506111b66000830184611192565b92915050565b600063ffffffff82169050919050565b6111d5816111bc565b81146111e057600080fd5b50565b6000813590506111f2816111cc565b92915050565b60006020828403121561120e5761120d610d41565b5b600061121c848285016111e3565b91505092915050565b61122e81610f63565b811461123957600080fd5b50565b60008135905061124b81611225565b92915050565b60006020828403121561126757611266610d41565b5b60006112758482850161123c565b91505092915050565b600061128982611132565b9050919050565b6112998161127e565b82525050565b60006020820190506112b46000830184611290565b92915050565b6000608082840312156112d0576112cf610ff7565b5b81905092915050565b600080600060a084860312156112f2576112f1610d41565b5b6000611300868287016112ba565b935050608084013567ffffffffffffffff81111561132157611320610d46565b5b61132d8682870161101b565b92509250509250925092565b60008083601f84011261134f5761134e610f97565b5b8235905067ffffffffffffffff81111561136c5761136b610f9c565b5b60208301915083602082028301111561138857611387610e63565b5b9250929050565b6000806000604084860312156113a8576113a7610d41565b5b60006113b68682870161123c565b935050602084013567ffffffffffffffff8111156113d7576113d6610d46565b5b6113e386828701611339565b92509250509250925092565b6000815190506113fe81610dc3565b92915050565b60006020828403121561141a57611419610d41565b5b6000611428848285016113ef565b91505092915050565b600082825260208201905092915050565b7f426c6f636b206275696c646572206973206e6f742076616c6964000000000000600082015250565b6000611478601a83611431565b915061148382611442565b602082019050919050565b600060208201905081810360008301526114a78161146b565b9050919050565b60008160f81b9050919050565b60006114c6826114ae565b9050919050565b60006114d8826114bb565b9050919050565b6114f06114eb82610db7565b6114cd565b82525050565b6000819050919050565b61151161150c82610d03565b6114f6565b82525050565b60008160801b9050919050565b600061152f82611517565b9050919050565b61154761154282610e1b565b611524565b82525050565b82818337505050565b6115626040838361154d565b5050565b6115726080838361154d565b5050565b6000611582828b6114df565b600182019150611592828a611500565b6020820191506115a28289611536565b6010820191506115b28288611500565b6020820191506115c28287611500565b6020820191506115d28286611556565b6040820191506115e28285611566565b6080820191506115f28284611566565b6080820191508190509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061164282610f63565b915061164d83610f63565b925082820390508181111561166557611664611608565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506116af6000830186610f6d565b6116bc6020830185610d0d565b6116c96040830184610d0d565b949350505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61171f826116d6565b810181811067ffffffffffffffff8211171561173e5761173d6116e7565b5b80604052505050565b6000611751610d37565b905061175d8282611716565b919050565b600060408284031215611778576117776116d1565b5b6117826040611747565b9050600061179284828501610e06565b60008301525060206117a684828501610d62565b60208301525092915050565b6000604082840312156117c8576117c7610d41565b5b60006117d684828501611762565b91505092915050565b600082825260208201905092915050565b82818337600083830152505050565b600061180b83856117df565b93506118188385846117f0565b611821836116d6565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61186181610f63565b82525050565b60006118738383611858565b60208301905092915050565b6000602082019050919050565b60006118978261182c565b6118a18185611837565b93506118ac83611848565b8060005b838110156118dd5781516118c48882611867565b97506118cf8361187f565b9250506001810190506118b0565b5085935050505092915050565b600060408201905081810360008301526119058185876117ff565b90508181036020830152611919818461188c565b9050949350505050565b600060808284031215611939576119386116d1565b5b6119436080611747565b9050600061195384828501610d62565b6000830152506020611967848285016111e3565b602083015250604061197b8482850161123c565b604083015250606061198f84828501610e06565b60608301525092915050565b6000608082840312156119b1576119b0610d41565b5b60006119bf84828501611923565b91505092915050565b6000608082840312156119de576119dd6116d1565b5b6119e86080611747565b905060006119f884828501610e06565b6000830152506020611a0c848285016111e3565b6020830152506040611a2084828501610d62565b6040830152506060611a3484828501610d62565b60608301525092915050565b600060808284031215611a5657611a55610d41565b5b6000611a64848285016119c8565b91505092915050565b600060208284031215611a8357611a82610d41565b5b6000611a9184828501610d62565b91505092915050565b6000604082019050611aaf6000830185610cd9565b611abc6020830184610cd9565b9392505050565b6000819050919050565b611ade611ad982610f63565b611ac3565b82525050565b6000611af08287611500565b602082019150611b008286611500565b602082019150611b108285611500565b602082019150611b208284611acd565b60208201915081905095945050505050565b60008160601b9050919050565b6000611b4a82611b32565b9050919050565b6000611b5c82611b3f565b9050919050565b611b74611b6f82610cc7565b611b51565b82525050565b6000611b868285611500565b602082019150611b968284611b63565b6014820191508190509392505050565b6000611bb182610f63565b9150611bbc83610f63565b9250828202611bca81610f63565b91508282048414831517611be157611be0611608565b5b5092915050565b60008160e01b9050919050565b6000611c0082611be8565b9050919050565b611c18611c13826111bc565b611bf5565b82525050565b6000611c2a8287611b63565b601482019150611c3a8286611c07565b600482019150611c4a8285611acd565b602082019150611c5a8284611500565b60208201915081905095945050505050565b6000611c788287611500565b602082019150611c888286611c07565b600482019150611c988285611b63565b601482019150611ca88284611b63565b6014820191508190509594505050505056fea2646970667358221220660bac4b3c2f600d0136c77dda822282fecdcc3d0639f861b6c948a4d1929f5464736f6c63430008180033";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    scrollMessenger: AddressLike,
    verifierAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      scrollMessenger,
      verifierAddress,
      overrides || {}
    );
  }
  override deploy(
    scrollMessenger: AddressLike,
    verifierAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      scrollMessenger,
      verifierAddress,
      overrides || {}
    ) as Promise<
      Rollup & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Rollup__factory {
    return super.connect(runner) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new Interface(_abi) as RollupInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Rollup {
    return new Contract(address, _abi, runner) as unknown as Rollup;
  }
}
