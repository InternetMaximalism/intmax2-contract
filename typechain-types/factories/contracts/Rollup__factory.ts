/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Rollup, RollupInterface } from "../../contracts/Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBlockBuilder",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalProofVerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "BlockFraudProofSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "prevBlockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "BlockPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
    ],
    name: "DepositsProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "withdrawalRequest",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawalAggregator",
        type: "address",
      },
    ],
    name: "WithdrawRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedDepositId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedWithdrawalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_blockBuilderRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isRegistrationBlock",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "txTreeRoot",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "senderFlags",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "publicKeysHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "accountIdsHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "aggregatedPublicKey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "aggregatedSignature",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[4]",
        name: "messagePoint",
        type: "uint256[4]",
      },
    ],
    name: "postBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IRollup.Withdrawal[]",
        name: "withdrawalRequests",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "withdrawalTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "withdrawalAggregator",
            type: "address",
          },
        ],
        internalType: "struct IRollup.WithdrawalProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "postWithdrawalRequests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedDepositId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "depositHashes",
        type: "bytes32[]",
      },
    ],
    name: "processDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "blockBuilder",
            type: "address",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct IRollup.FraudProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitBlockFraudProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedWithdrawId",
        type: "uint256",
      },
    ],
    name: "submitWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051612b0761006d60003960008181610f6101528181610fb601526111710152612b076000f3fe6080604052600436106100f35760003560e01c8063d2b210a11161008a578063eeedfc0511610059578063eeedfc05146102f7578063f03efa3714610322578063f2fde38b1461034b578063f8c8765e14610374576100f3565b8063d2b210a11461023d578063d6e4602d1461027a578063dd4d4e89146102a3578063eb8d5d23146102ce576100f3565b8063715018a6116100c6578063715018a6146101a757806379072407146101be5780638da5cb5b146101e7578063ad3cb1cc14610212576100f3565b8063048de2f6146100f857806348253b7a146101235780634f1ef2861461016057806352d1902d1461017c575b600080fd5b34801561010457600080fd5b5061010d61039d565b60405161011a9190611968565b60405180910390f35b34801561012f57600080fd5b5061014a60048036038101906101459190611a8c565b6103a7565b6040516101579190611b5c565b60405180910390f35b61017a60048036038101906101759190611d1b565b61059c565b005b34801561018857600080fd5b506101916105bb565b60405161019e9190611968565b60405180910390f35b3480156101b357600080fd5b506101bc6105ee565b005b3480156101ca57600080fd5b506101e560048036038101906101e09190611e4c565b610602565b005b3480156101f357600080fd5b506101fc6107c3565b6040516102099190611ef0565b60405180910390f35b34801561021e57600080fd5b506102276107fb565b6040516102349190611f8a565b60405180910390f35b34801561024957600080fd5b50610264600480360381019061025f9190611fe8565b610834565b6040516102719190611968565b60405180910390f35b34801561028657600080fd5b506102a1600480360381019061029c9190612041565b610862565b005b3480156102af57600080fd5b506102b861086c565b6040516102c59190611b5c565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061208d565b610876565b005b34801561030357600080fd5b5061030c610b6b565b6040516103199190611b5c565b60405180910390f35b34801561032e57600080fd5b5061034960048036038101906103449190612143565b610b75565b005b34801561035757600080fd5b50610372600480360381019061036d91906121a3565b610bc8565b005b34801561038057600080fd5b5061039b600480360381019061039691906121d0565b610c4e565b005b6000600554905090565b6000801515600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a5387a86103f2610f1e565b6040518263ffffffff1660e01b815260040161040e9190611ef0565b602060405180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f919061224c565b151503610488576040517f23d4a24e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600089898989898989896040516020016104a9989796959493929190612341565b6040516020818303038152906040528051906020012090506004805490509150600060046001846104da9190612402565b815481106104eb576104ea612436565b5b9060005260206000200154905060006005549050600461050d83838688610f26565b908060018154018082558091505060019003906000526020600020016000909190919091505561053b610f1e565b73ffffffffffffffffffffffffffffffffffffffff16827fe27163b76905dc373b4ad854ddc9403bbac659c5f1c5191c39e5a7c44574040a86848760405161058593929190612465565b60405180910390a350505098975050505050505050565b6105a4610f5f565b6105ad82611045565b6105b78282611050565b5050565b60006105c561116f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6105f66111f6565b610600600061127d565b565b600061061d8480360381019061061891906124f1565b611354565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a84846106688561138e565b6040518463ffffffff1660e01b81526004016106869392919061261a565b602060405180830381865afa1580156106a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c7919061224c565b6106fd576040517f38a3efc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008460000135905060005b8787905081101561077a57600861074789898481811061072c5761072b612436565b5b90506080020180360381019061074291906126cb565b611439565b90806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050610709565b50807f0e3e90af4fd393b8486d674b4f90f884aea927619dbfb8458b4a732d9f7694f06107a5610f1e565b6040516107b29190611ef0565b60405180910390a250505050505050565b6000806107ce61147f565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600060048263ffffffff16815481106108505761084f612436565b5b90600052602060002001549050919050565b8060078190555050565b6000600954905090565b600a600084602001602081019061088d9190611fe8565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff16156108ec576040517f94009bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610907848036038101906109029190612770565b6114a7565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a84846109528561138e565b6040518463ffffffff1660e01b81526004016109709392919061261a565b602060405180830381865afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b1919061224c565b6109e7576040517f55d979c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a6000866020016020810190610a009190611fe8565b63ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663750d38cb856040016020810190610a8291906121a3565b610a8a610f1e565b6040518363ffffffff1660e01b8152600401610aa792919061279d565b600060405180830381600087803b158015610ac157600080fd5b505af1158015610ad5573d6000803e3d6000fd5b50505050610ae1610f1e565b73ffffffffffffffffffffffffffffffffffffffff16846040016020810190610b0a91906121a3565b73ffffffffffffffffffffffffffffffffffffffff16856020016020810190610b339190611fe8565b63ffffffff167fa2d160ed24716f0240546105d30a2e1efb2d5f23abb041888083bcc20083edd260405160405180910390a450505050565b6000600754905090565b60008060001b905080600581905550836009819055507f22ab6afd5caf53c894a7bb125d98ba16962ef2986041d88192b54e81ed84a10381604051610bba9190611968565b60405180910390a150505050565b610bd06111f6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c399190611ef0565b60405180910390fd5b610c4b8161127d565b50565b6000610c586114ed565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610ca65750825b9050600060018367ffffffffffffffff16148015610cdb575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610ce9575080155b15610d20576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610d705760018560000160086101000a81548160ff0219169083151502179055505b610d80610d7b610f1e565b611515565b610d88611529565b886000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060046000801b90806001815401808255809150506001900390600052602060002001600090919091909150558315610f135760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610f0a919061281f565b60405180910390a15b505050505050505050565b600033905090565b600084848484604051602001610f3f949392919061285b565b604051602081830303815290604052805190602001209050949350505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061100c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610ff3611533565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611043576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61104d6111f6565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156110b857506040513d601f19601f820116820180604052508101906110b591906128be565b60015b6110f957816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016110f09190611ef0565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461116057806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016111579190611968565b60405180910390fd5b61116a838361158a565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146111f4576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111fe610f1e565b73ffffffffffffffffffffffffffffffffffffffff1661121c6107c3565b73ffffffffffffffffffffffffffffffffffffffff161461127b5761123f610f1e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112729190611ef0565b60405180910390fd5b565b600061128761147f565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600081600001518260200151604051602001611371929190612933565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff8111156113ad576113ac611bf0565b5b6040519080825280602002602001820160405280156113db5781602001602082028036833780820191505090505b50905060005b600881101561142f576020816113f7919061295f565b84901b60e01c63ffffffff1682828151811061141657611415612436565b5b60200260200101818152505080806001019150506113e1565b5080915050919050565b6000816000015182602001518360400151846060015160405160200161146294939291906129d7565b604051602081830303815290604052805190602001209050919050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600081600001518260200151836040015184606001516040516020016114d09493929190612a25565b604051602081830303815290604052805190602001209050919050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61151d6115fd565b6115268161163d565b50565b6115316115fd565b565b60006115617f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6116c3565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611593826116cd565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156115f0576115ea828261179a565b506115f9565b6115f861181e565b5b5050565b61160561185b565b61163b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116456115fd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116b75760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116ae9190611ef0565b60405180910390fd5b6116c08161127d565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361172957806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016117209190611ef0565b60405180910390fd5b806117567f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6116c3565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516117c49190612aba565b600060405180830381855af49150503d80600081146117ff576040519150601f19603f3d011682016040523d82523d6000602084013e611804565b606091505b509150915061181485838361187b565b9250505092915050565b6000341115611859576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006118656114ed565b60000160089054906101000a900460ff16905090565b6060826118905761188b8261190a565b611902565b600082511480156118b8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156118fa57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016118f19190611ef0565b60405180910390fd5b819050611903565b5b9392505050565b60008151111561191d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b6119628161194f565b82525050565b600060208201905061197d6000830184611959565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b6119ac81611997565b81146119b757600080fd5b50565b6000813590506119c9816119a3565b92915050565b6119d88161194f565b81146119e357600080fd5b50565b6000813590506119f5816119cf565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611a20816119fb565b8114611a2b57600080fd5b50565b600081359050611a3d81611a17565b92915050565b600080fd5b600081905082602060020282011115611a6457611a63611a43565b5b92915050565b600081905082602060040282011115611a8657611a85611a43565b5b92915050565b6000806000806000806000806101e0898b031215611aad57611aac61198d565b5b6000611abb8b828c016119ba565b9850506020611acc8b828c016119e6565b9750506040611add8b828c01611a2e565b9650506060611aee8b828c016119e6565b9550506080611aff8b828c016119e6565b94505060a0611b108b828c01611a48565b93505060e0611b218b828c01611a6a565b925050610160611b338b828c01611a6a565b9150509295985092959890939650565b6000819050919050565b611b5681611b43565b82525050565b6000602082019050611b716000830184611b4d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ba282611b77565b9050919050565b611bb281611b97565b8114611bbd57600080fd5b50565b600081359050611bcf81611ba9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c2882611bdf565b810181811067ffffffffffffffff82111715611c4757611c46611bf0565b5b80604052505050565b6000611c5a611983565b9050611c668282611c1f565b919050565b600067ffffffffffffffff821115611c8657611c85611bf0565b5b611c8f82611bdf565b9050602081019050919050565b82818337600083830152505050565b6000611cbe611cb984611c6b565b611c50565b905082815260208101848484011115611cda57611cd9611bda565b5b611ce5848285611c9c565b509392505050565b600082601f830112611d0257611d01611bd5565b5b8135611d12848260208601611cab565b91505092915050565b60008060408385031215611d3257611d3161198d565b5b6000611d4085828601611bc0565b925050602083013567ffffffffffffffff811115611d6157611d60611992565b5b611d6d85828601611ced565b9150509250929050565b600080fd5b60008083601f840112611d9257611d91611bd5565b5b8235905067ffffffffffffffff811115611daf57611dae611d77565b5b602083019150836080820283011115611dcb57611dca611a43565b5b9250929050565b600080fd5b600060408284031215611ded57611dec611dd2565b5b81905092915050565b60008083601f840112611e0c57611e0b611bd5565b5b8235905067ffffffffffffffff811115611e2957611e28611d77565b5b602083019150836001820283011115611e4557611e44611a43565b5b9250929050565b600080600080600060808688031215611e6857611e6761198d565b5b600086013567ffffffffffffffff811115611e8657611e85611992565b5b611e9288828901611d7c565b95509550506020611ea588828901611dd7565b935050606086013567ffffffffffffffff811115611ec657611ec5611992565b5b611ed288828901611df6565b92509250509295509295909350565b611eea81611b97565b82525050565b6000602082019050611f056000830184611ee1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f45578082015181840152602081019050611f2a565b60008484015250505050565b6000611f5c82611f0b565b611f668185611f16565b9350611f76818560208601611f27565b611f7f81611bdf565b840191505092915050565b60006020820190508181036000830152611fa48184611f51565b905092915050565b600063ffffffff82169050919050565b611fc581611fac565b8114611fd057600080fd5b50565b600081359050611fe281611fbc565b92915050565b600060208284031215611ffe57611ffd61198d565b5b600061200c84828501611fd3565b91505092915050565b61201e81611b43565b811461202957600080fd5b50565b60008135905061203b81612015565b92915050565b6000602082840312156120575761205661198d565b5b60006120658482850161202c565b91505092915050565b60006080828403121561208457612083611dd2565b5b81905092915050565b600080600060a084860312156120a6576120a561198d565b5b60006120b48682870161206e565b935050608084013567ffffffffffffffff8111156120d5576120d4611992565b5b6120e186828701611df6565b92509250509250925092565b60008083601f84011261210357612102611bd5565b5b8235905067ffffffffffffffff8111156121205761211f611d77565b5b60208301915083602082028301111561213c5761213b611a43565b5b9250929050565b60008060006040848603121561215c5761215b61198d565b5b600061216a8682870161202c565b935050602084013567ffffffffffffffff81111561218b5761218a611992565b5b612197868287016120ed565b92509250509250925092565b6000602082840312156121b9576121b861198d565b5b60006121c784828501611bc0565b91505092915050565b600080600080608085870312156121ea576121e961198d565b5b60006121f887828801611bc0565b945050602061220987828801611bc0565b935050604061221a87828801611bc0565b925050606061222b87828801611bc0565b91505092959194509250565b600081519050612246816119a3565b92915050565b6000602082840312156122625761226161198d565b5b600061227084828501612237565b91505092915050565b60008160f81b9050919050565b600061229182612279565b9050919050565b60006122a382612286565b9050919050565b6122bb6122b682611997565b612298565b82525050565b6000819050919050565b6122dc6122d78261194f565b6122c1565b82525050565b60008160801b9050919050565b60006122fa826122e2565b9050919050565b61231261230d826119fb565b6122ef565b82525050565b82818337505050565b61232d60408383612318565b5050565b61233d60808383612318565b5050565b600061234d828b6122aa565b60018201915061235d828a6122cb565b60208201915061236d8289612301565b60108201915061237d82886122cb565b60208201915061238d82876122cb565b60208201915061239d8286612321565b6040820191506123ad8285612331565b6080820191506123bd8284612331565b6080820191508190509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061240d82611b43565b915061241883611b43565b92508282039050818111156124305761242f6123d3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060608201905061247a6000830186611b4d565b6124876020830185611959565b6124946040830184611959565b949350505050565b600080fd5b6000604082840312156124b7576124b661249c565b5b6124c16040611c50565b905060006124d1848285016119e6565b60008301525060206124e584828501611bc0565b60208301525092915050565b6000604082840312156125075761250661198d565b5b6000612515848285016124a1565b91505092915050565b600082825260208201905092915050565b600061253b838561251e565b9350612548838584611c9c565b61255183611bdf565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61259181611b43565b82525050565b60006125a38383612588565b60208301905092915050565b6000602082019050919050565b60006125c78261255c565b6125d18185612567565b93506125dc83612578565b8060005b8381101561260d5781516125f48882612597565b97506125ff836125af565b9250506001810190506125e0565b5085935050505092915050565b6000604082019050818103600083015261263581858761252f565b9050818103602083015261264981846125bc565b9050949350505050565b6000608082840312156126695761266861249c565b5b6126736080611c50565b9050600061268384828501611bc0565b600083015250602061269784828501611fd3565b60208301525060406126ab8482850161202c565b60408301525060606126bf848285016119e6565b60608301525092915050565b6000608082840312156126e1576126e061198d565b5b60006126ef84828501612653565b91505092915050565b60006080828403121561270e5761270d61249c565b5b6127186080611c50565b90506000612728848285016119e6565b600083015250602061273c84828501611fd3565b602083015250604061275084828501611bc0565b604083015250606061276484828501611bc0565b60608301525092915050565b6000608082840312156127865761278561198d565b5b6000612794848285016126f8565b91505092915050565b60006040820190506127b26000830185611ee1565b6127bf6020830184611ee1565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006128096128046127ff846127c6565b6127e4565b6127d0565b9050919050565b612819816127ee565b82525050565b60006020820190506128346000830184612810565b92915050565b6000819050919050565b61285561285082611b43565b61283a565b82525050565b600061286782876122cb565b60208201915061287782866122cb565b60208201915061288782856122cb565b6020820191506128978284612844565b60208201915081905095945050505050565b6000815190506128b8816119cf565b92915050565b6000602082840312156128d4576128d361198d565b5b60006128e2848285016128a9565b91505092915050565b60008160601b9050919050565b6000612903826128eb565b9050919050565b6000612915826128f8565b9050919050565b61292d61292882611b97565b61290a565b82525050565b600061293f82856122cb565b60208201915061294f828461291c565b6014820191508190509392505050565b600061296a82611b43565b915061297583611b43565b925082820261298381611b43565b9150828204841483151761299a576129996123d3565b5b5092915050565b60008160e01b9050919050565b60006129b9826129a1565b9050919050565b6129d16129cc82611fac565b6129ae565b82525050565b60006129e3828761291c565b6014820191506129f382866129c0565b600482019150612a038285612844565b602082019150612a1382846122cb565b60208201915081905095945050505050565b6000612a3182876122cb565b602082019150612a4182866129c0565b600482019150612a51828561291c565b601482019150612a61828461291c565b60148201915081905095945050505050565b600081519050919050565b600081905092915050565b6000612a9482612a73565b612a9e8185612a7e565b9350612aae818560208601611f27565b80840191505092915050565b6000612ac68284612a89565b91508190509291505056fea2646970667358221220a18f091f024b6a288f6188a6ef19fcb180925504f98fa2f0333e2c423dd1716d64736f6c63430008180033";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Rollup & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Rollup__factory {
    return super.connect(runner) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new Interface(_abi) as RollupInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Rollup {
    return new Contract(address, _abi, runner) as unknown as Rollup;
  }
}
