/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Liquidity, LiquidityInterface } from "../../contracts/Liquidity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "rollupContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
    ],
    name: "DepositCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "recipientSaltHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "tokenIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "requestedAt",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    inputs: [],
    name: "_rollupContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_scrollMessenger",
    outputs: [
      {
        internalType: "contract IScrollMessenger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "recipientSaltHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidity.Deposit",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "cancelPendingDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "recipientSaltHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidity.Deposit",
        name: "deposit",
        type: "tuple",
      },
    ],
    name: "claimRejectedDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "recipientSaltHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "recipientSaltHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "recipientSaltHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "depositERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "recipientSaltHash",
        type: "bytes32",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastAnalyzedDepositId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedDepositId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
    ],
    name: "getPendingDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "depositHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAt",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidity.DepositData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
    ],
    name: "getRejectedDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "depositHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "requestedAt",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidity.DepositData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ILiquidity.TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "tokenIndex",
        type: "uint32",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "enum ILiquidity.TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidity.TokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IRollup.Withdrawal[]",
        name: "withdrawals",
        type: "tuple[]",
      },
    ],
    name: "processWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastAnalyzedDepositId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "rejectedDepositIds",
        type: "uint256[]",
      },
    ],
    name: "rejectDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedDepositId",
        type: "uint256",
      },
    ],
    name: "submitDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260018060146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060016006553480156200003f57600080fd5b5060405162002db538038062002db583398181016040528101906200006591906200036f565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060076040518060600160405280600060038111156200010a5762000109620003b6565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690836003811115620001885762000187620003b6565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816001015550506000600860008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550600260405180606001604052806000801b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550505050620003e5565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000337826200030a565b9050919050565b62000349816200032a565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b6000806040838503121562000389576200038862000305565b5b6000620003998582860162000358565b9250506020620003ac8582860162000358565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6129c080620003f56000396000f3fe6080604052600436106101095760003560e01c80639e68758711610095578063d28906c911610064578063d28906c914610365578063d68d9d4e14610390578063d92b998a146103ac578063dd4d4e89146103d5578063ebab8fe01461040057610109565b80639e687587146102ab5780639f401f58146102d4578063aa8fc35b146102fd578063cbd90cd01461032857610109565b8063591ec1d2116100dc578063591ec1d2146101da5780636a49c47d146102035780636af5e3bd1461022e578063788c2ecf146102595780638492d2251461028257610109565b806326fc02dd1461010e578063381175f6146101375780634ac77977146101745780634cde335c1461019d575b600080fd5b34801561011a57600080fd5b5061013560048036038101906101309190611c97565b61043d565b005b34801561014357600080fd5b5061015e60048036038101906101599190611d23565b6104e2565b60405161016b9190611d95565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190611db0565b610606565b005b3480156101a957600080fd5b506101c460048036038101906101bf9190611db0565b610610565b6040516101d19190611e4c565b60405180910390f35b3480156101e657600080fd5b5061020160048036038101906101fc9190611f88565b6106b6565b005b34801561020f57600080fd5b5061021861083d565b6040516102259190611fd7565b60405180910390f35b34801561023a57600080fd5b50610243610863565b6040516102509190612001565b60405180910390f35b34801561026557600080fd5b50610280600480360381019061027b919061201c565b61086d565b005b34801561028e57600080fd5b506102a960048036038101906102a49190611f88565b61092c565b005b3480156102b757600080fd5b506102d260048036038101906102cd91906120d4565b610ad1565b005b3480156102e057600080fd5b506102fb60048036038101906102f6919061201c565b610ad5565b005b34801561030957600080fd5b50610312610b67565b60405161031f9190612180565b60405180910390f35b34801561033457600080fd5b5061034f600480360381019061034a919061219b565b610b8b565b60405161035c9190612281565b60405180910390f35b34801561037157600080fd5b5061037a610c68565b6040516103879190612001565b60405180910390f35b6103aa60048036038101906103a5919061229c565b610c90565b005b3480156103b857600080fd5b506103d360048036038101906103ce919061231f565b610ca0565b005b3480156103e157600080fd5b506103ea610dfc565b6040516103f79190612001565b60405180910390f35b34801561040c57600080fd5b5061042760048036038101906104229190611db0565b610e06565b6040516104349190611e4c565b60405180910390f35b8373ffffffffffffffffffffffffffffffffffffffff1663f242432a33308585604051806020016040528060008152506040518663ffffffff1660e01b815260040161048d9594939291906123fe565b600060405180830381600087803b1580156104a757600080fd5b505af11580156104bb573d6000803e3d6000fd5b5050505060006104cd60038685610e9d565b90506104db338583856111e1565b5050505050565b60008060038111156104f7576104f66121c8565b5b84600381111561050a576105096121c8565b5b0361051857600090506105ff565b6001600381111561052c5761052b6121c8565b5b84600381111561053f5761053e6121c8565b5b0361059b57600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff1690506105ff565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900463ffffffff1690505b9392505050565b8060058190555050565b610618611b36565b6002828154811061062c5761062b612458565b5b9060005260206000209060030201604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050919050565b600060036000848152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16146107b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab9061250a565b60405180910390fd5b600360008481526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160009055505061080b8183611400565b827f0c1c0787650562778c282502dfd6dcea2fb79d23783920aa18aee36b4aa3dc4860405160405180910390a2505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600454905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d390612576565b60405180910390fd5b6109093330838673ffffffffffffffffffffffffffffffffffffffff166117a7909392919063ffffffff16565b60006109186001856000610e9d565b9050610926338483856111e1565b50505050565b60006002838154811061094257610941612458565b5b9060005260206000209060030201604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614610a39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a309061250a565b60405180910390fd5b60028381548110610a4d57610a4c612458565b5b90600052602060002090600302016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090555050610a9f8183611400565b827f0c1c0787650562778c282502dfd6dcea2fb79d23783920aa18aee36b4aa3dc4860405160405180910390a2505050565b5050565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b1293929190612596565b600060405180830381600087803b158015610b2c57600080fd5b505af1158015610b40573d6000803e3d6000fd5b505050506000610b5260028584610e9d565b9050610b6133848360016111e1565b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b93611b70565b60078263ffffffff1681548110610bad57610bac612458565b5b90600052602060002090600202016040518060600160405290816000820160009054906101000a900460ff166003811115610beb57610bea6121c8565b5b6003811115610bfd57610bfc6121c8565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815250509050919050565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16905090565b610c9d33826000346111e1565b50565b8260048190555060005b82829050811015610df6576000838383818110610cca57610cc9612458565b5b90506020020135905060028181548110610ce757610ce6612458565b5b906000526020600020906003020160036000838152602001908152602001600020600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002820154816002015590505060028181548110610d9a57610d99612458565b5b90600052602060002090600302016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090555050508080610dee906125fc565b915050610caa565b50505050565b6000600554905090565b610e0e611b36565b60036000838152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050919050565b6000806003811115610eb257610eb16121c8565b5b846003811115610ec557610ec46121c8565b5b03610ed357600090506111da565b6000600654905060016003811115610eee57610eed6121c8565b5b856003811115610f0157610f006121c8565b5b0361105a5760076040518060600160405280876003811115610f2657610f256121c8565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff02191690836003811115610f9f57610f9e6121c8565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155505080600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055506111bb565b6007604051806060016040528087600381111561107a576110796121c8565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff021916908360038111156110f3576110f26121c8565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010155505080600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b6001600660008282546111ce9190612644565b92505081905550809150505b9392505050565b67ffffffffffffffff8016600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff160361124d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611244906126c4565b60405180910390fd5b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff16905060018060148282829054906101000a900467ffffffffffffffff1661129791906126f8565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060006112e860405180606001604052808781526020018663ffffffff16815260200185815250611829565b9050600260405180606001604052808381526020018873ffffffffffffffffffffffffffffffffffffffff1681526020014281525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550508573ffffffffffffffffffffffffffffffffffffffff16827f1e88950eef3c1bd8dd83d765aec1f21f34ca153104f0acd7a6218bf8f48e8410878787426040516113f09493929190612743565b60405180910390a3505050505050565b6000801b826000015103611449576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611440906127d4565b60405180910390fd5b61145281611829565b826000015114611497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148e906127d4565b60405180910390fd5b60006007826020015163ffffffff16815481106114b7576114b6612458565b5b90600052602060002090600202016040518060600160405290816000820160009054906101000a900460ff1660038111156114f5576114f46121c8565b5b6003811115611507576115066121c8565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050905060006003811115611581576115806121c8565b5b81600001516003811115611598576115976121c8565b5b036115f157826020015173ffffffffffffffffffffffffffffffffffffffff166108fc83604001519081150290604051600060405180830381858888f193505050501580156115eb573d6000803e3d6000fd5b506117a2565b60016003811115611605576116046121c8565b5b8160000151600381111561161c5761161b6121c8565b5b0361165d5761165883602001518360400151836020015173ffffffffffffffffffffffffffffffffffffffff166118699092919063ffffffff16565b6117a1565b60026003811115611671576116706121c8565b5b81600001516003811115611688576116876121c8565b5b0361170d57806020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd30856020015184604001516040518463ffffffff1660e01b81526004016116d693929190612596565b600060405180830381600087803b1580156116f057600080fd5b505af1158015611704573d6000803e3d6000fd5b505050506117a0565b806020015173ffffffffffffffffffffffffffffffffffffffff1663f242432a30856020015184604001518660400151604051806020016040528060008152506040518663ffffffff1660e01b815260040161176d9594939291906123fe565b600060405180830381600087803b15801561178757600080fd5b505af115801561179b573d6000803e3d6000fd5b505050505b5b5b505050565b611823848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016117dc93929190612596565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118e8565b50505050565b600081600001518260200151836040015160405160200161184c9392919061286c565b604051602081830303815290604052805190602001209050919050565b6118e3838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161189c9291906128a9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118e8565b505050565b6000611913828473ffffffffffffffffffffffffffffffffffffffff1661197f90919063ffffffff16565b90506000815114158015611938575080806020019051810190611936919061290a565b155b1561197a57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016119719190611fd7565b60405180910390fd5b505050565b606061198d83836000611995565b905092915050565b6060814710156119dc57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016119d39190611fd7565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051611a059190612973565b60006040518083038185875af1925050503d8060008114611a42576040519150601f19603f3d011682016040523d82523d6000602084013e611a47565b606091505b5091509150611a57868383611a62565b925050509392505050565b606082611a7757611a7282611af1565b611ae9565b60008251148015611a9f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611ae157836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611ad89190611fd7565b60405180910390fd5b819050611aea565b5b9392505050565b600081511115611b045780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051806060016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806060016040528060006003811115611b8f57611b8e6121c8565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bf882611bcd565b9050919050565b611c0881611bed565b8114611c1357600080fd5b50565b600081359050611c2581611bff565b92915050565b6000819050919050565b611c3e81611c2b565b8114611c4957600080fd5b50565b600081359050611c5b81611c35565b92915050565b6000819050919050565b611c7481611c61565b8114611c7f57600080fd5b50565b600081359050611c9181611c6b565b92915050565b60008060008060808587031215611cb157611cb0611bc3565b5b6000611cbf87828801611c16565b9450506020611cd087828801611c4c565b9350506040611ce187828801611c82565b9250506060611cf287828801611c82565b91505092959194509250565b60048110611d0b57600080fd5b50565b600081359050611d1d81611cfe565b92915050565b600080600060608486031215611d3c57611d3b611bc3565b5b6000611d4a86828701611d0e565b9350506020611d5b86828701611c16565b9250506040611d6c86828701611c82565b9150509250925092565b600063ffffffff82169050919050565b611d8f81611d76565b82525050565b6000602082019050611daa6000830184611d86565b92915050565b600060208284031215611dc657611dc5611bc3565b5b6000611dd484828501611c82565b91505092915050565b611de681611c2b565b82525050565b611df581611bed565b82525050565b611e0481611c61565b82525050565b606082016000820151611e206000850182611ddd565b506020820151611e336020850182611dec565b506040820151611e466040850182611dfb565b50505050565b6000606082019050611e616000830184611e0a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611eb582611e6c565b810181811067ffffffffffffffff82111715611ed457611ed3611e7d565b5b80604052505050565b6000611ee7611bb9565b9050611ef38282611eac565b919050565b611f0181611d76565b8114611f0c57600080fd5b50565b600081359050611f1e81611ef8565b92915050565b600060608284031215611f3a57611f39611e67565b5b611f446060611edd565b90506000611f5484828501611c4c565b6000830152506020611f6884828501611f0f565b6020830152506040611f7c84828501611c82565b60408301525092915050565b60008060808385031215611f9f57611f9e611bc3565b5b6000611fad85828601611c82565b9250506020611fbe85828601611f24565b9150509250929050565b611fd181611bed565b82525050565b6000602082019050611fec6000830184611fc8565b92915050565b611ffb81611c61565b82525050565b60006020820190506120166000830184611ff2565b92915050565b60008060006060848603121561203557612034611bc3565b5b600061204386828701611c16565b935050602061205486828701611c4c565b925050604061206586828701611c82565b9150509250925092565b600080fd5b600080fd5b600080fd5b60008083601f8401126120945761209361206f565b5b8235905067ffffffffffffffff8111156120b1576120b0612074565b5b6020830191508360808202830111156120cd576120cc612079565b5b9250929050565b600080602083850312156120eb576120ea611bc3565b5b600083013567ffffffffffffffff81111561210957612108611bc8565b5b6121158582860161207e565b92509250509250929050565b6000819050919050565b600061214661214161213c84611bcd565b612121565b611bcd565b9050919050565b60006121588261212b565b9050919050565b600061216a8261214d565b9050919050565b61217a8161215f565b82525050565b60006020820190506121956000830184612171565b92915050565b6000602082840312156121b1576121b0611bc3565b5b60006121bf84828501611f0f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612208576122076121c8565b5b50565b6000819050612219826121f7565b919050565b60006122298261220b565b9050919050565b6122398161221e565b82525050565b6060820160008201516122556000850182612230565b5060208201516122686020850182611dec565b50604082015161227b6040850182611dfb565b50505050565b6000606082019050612296600083018461223f565b92915050565b6000602082840312156122b2576122b1611bc3565b5b60006122c084828501611c4c565b91505092915050565b60008083601f8401126122df576122de61206f565b5b8235905067ffffffffffffffff8111156122fc576122fb612074565b5b60208301915083602082028301111561231857612317612079565b5b9250929050565b60008060006040848603121561233857612337611bc3565b5b600061234686828701611c82565b935050602084013567ffffffffffffffff81111561236757612366611bc8565b5b612373868287016122c9565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156123b957808201518184015260208101905061239e565b60008484015250505050565b60006123d08261237f565b6123da818561238a565b93506123ea81856020860161239b565b6123f381611e6c565b840191505092915050565b600060a0820190506124136000830188611fc8565b6124206020830187611fc8565b61242d6040830186611ff2565b61243a6060830185611ff2565b818103608083015261244c81846123c5565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f6e6c792074686520726563697069656e742063616e2063616e63656c20746860008201527f65206465706f7369740000000000000000000000000000000000000000000000602082015250565b60006124f4602983612487565b91506124ff82612498565b604082019050919050565b60006020820190508181036000830152612523816124e7565b9050919050565b7f496e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b6000612560601583612487565b915061256b8261252a565b602082019050919050565b6000602082019050818103600083015261258f81612553565b9050919050565b60006060820190506125ab6000830186611fc8565b6125b86020830185611fc8565b6125c56040830184611ff2565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061260782611c61565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612639576126386125cd565b5b600182019050919050565b600061264f82611c61565b915061265a83611c61565b9250828201905080821115612672576126716125cd565b5b92915050565b7f4465706f73697420636f756e746572206f766572666c6f770000000000000000600082015250565b60006126ae601883612487565b91506126b982612678565b602082019050919050565b600060208201905081810360008301526126dd816126a1565b9050919050565b600067ffffffffffffffff82169050919050565b6000612703826126e4565b915061270e836126e4565b9250828201905067ffffffffffffffff81111561272e5761272d6125cd565b5b92915050565b61273d81611c2b565b82525050565b60006080820190506127586000830187612734565b6127656020830186611d86565b6127726040830185611ff2565b61277f6060830184611ff2565b95945050505050565b7f496e76616c6964206465706f7369742068617368000000000000000000000000600082015250565b60006127be601483612487565b91506127c982612788565b602082019050919050565b600060208201905081810360008301526127ed816127b1565b9050919050565b6000819050919050565b61280f61280a82611c2b565b6127f4565b82525050565b60008160e01b9050919050565b600061282d82612815565b9050919050565b61284561284082611d76565b612822565b82525050565b6000819050919050565b61286661286182611c61565b61284b565b82525050565b600061287882866127fe565b6020820191506128888285612834565b6004820191506128988284612855565b602082019150819050949350505050565b60006040820190506128be6000830185611fc8565b6128cb6020830184611ff2565b9392505050565b60008115159050919050565b6128e7816128d2565b81146128f257600080fd5b50565b600081519050612904816128de565b92915050565b6000602082840312156129205761291f611bc3565b5b600061292e848285016128f5565b91505092915050565b600081905092915050565b600061294d8261237f565b6129578185612937565b935061296781856020860161239b565b80840191505092915050565b600061297f8284612942565b91508190509291505056fea2646970667358221220b252c68c00fa36d69fa0fa255557299949be999e50972272cf255b13d2bfa69f64736f6c63430008140033";

type LiquidityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Liquidity__factory extends ContractFactory {
  constructor(...args: LiquidityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    scrollMessenger: PromiseOrValue<string>,
    rollupContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Liquidity> {
    return super.deploy(
      scrollMessenger,
      rollupContract,
      overrides || {}
    ) as Promise<Liquidity>;
  }
  override getDeployTransaction(
    scrollMessenger: PromiseOrValue<string>,
    rollupContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      scrollMessenger,
      rollupContract,
      overrides || {}
    );
  }
  override attach(address: string): Liquidity {
    return super.attach(address) as Liquidity;
  }
  override connect(signer: Signer): Liquidity__factory {
    return super.connect(signer) as Liquidity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityInterface {
    return new utils.Interface(_abi) as LiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Liquidity {
    return new Contract(address, _abi, signerOrProvider) as Liquidity;
  }
}
