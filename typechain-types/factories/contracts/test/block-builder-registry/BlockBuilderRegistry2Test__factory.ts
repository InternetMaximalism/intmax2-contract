/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BlockBuilderRegistry2Test,
  BlockBuilderRegistry2TestInterface,
} from "../../../../contracts/test/block-builder-registry/BlockBuilderRegistry2Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "BlockBuilderNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotUnstakeWithinChallengeDuration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FailedTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "given",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
    ],
    name: "FraudProofBlockHashMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofChallengerMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientStakeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "BlockBuilderSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
    ],
    name: "BlockBuilderStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
    ],
    name: "BlockBuilderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "BlockFraudProofSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blockBuilders",
    outputs: [
      {
        internalType: "string",
        name: "blockBuilderUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stopTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numSlashes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollup",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fraudVerifier",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
    ],
    name: "isValidBlockBuilder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_burnAddress",
        type: "address",
      },
    ],
    name: "setBurnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopBlockBuilder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct FraudProofPublicInputsLib.FraudProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitBlockFraudProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "updateBlockBuilder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b506080516135ff61006d60003960008181611d4e01528181611da30152611f5e01526135ff6000f3fe6080604052600436106100e85760003560e01c806352d1902d1161008a5780638da5cb5b116100595780638da5cb5b1461028e578063ad3cb1cc146102b9578063e1cb0e52146102e4578063f2fde38b1461030f576100e8565b806352d1902d146101ce57806363cebe62146101f95780636a5387a81461023a578063715018a614610277576100e8565b8063485cc955116100c6578063485cc955146101495780634b0e7216146101725780634f1ef2861461019b57806351334851146101b7576100e8565b80630cffc39c146100ed5780630f36c638146101165780632def662014610132575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190612611565b610338565b005b610130600480360381019061012b91906127b2565b6106fe565b005b34801561013e57600080fd5b5061014761099d565b005b34801561015557600080fd5b50610170600480360381019061016b9190612859565b610d68565b005b34801561017e57600080fd5b5061019960048036038101906101949190612899565b610fcb565b005b6101b560048036038101906101b09190612967565b611017565b005b3480156101c357600080fd5b506101cc611036565b005b3480156101da57600080fd5b506101e36113bd565b6040516101f091906129dc565b60405180910390f35b34801561020557600080fd5b50610220600480360381019061021b9190612899565b6113f0565b604051610231959493929190612aaa565b60405180910390f35b34801561024657600080fd5b50610261600480360381019061025c9190612899565b6114bb565b60405161026e9190612b04565b60405180910390f35b34801561028357600080fd5b5061028c611514565b005b34801561029a57600080fd5b506102a3611528565b6040516102b09190612b2e565b60405180910390f35b3480156102c557600080fd5b506102ce611560565b6040516102db9190612b49565b60405180910390f35b3480156102f057600080fd5b506102f9611599565b6040516103069190612b6b565b60405180910390f35b34801561031b57600080fd5b5061033660048036038101906103319190612899565b6115a2565b005b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e5b4668e86602001602081019061038a9190612bc2565b6040518263ffffffff1660e01b81526004016103a69190612c2a565b6040805180830381865afa1580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e69190612c86565b9150915081856000013514610438578460000135826040517f22374e6b00000000000000000000000000000000000000000000000000000000815260040161042f929190612cc6565b60405180910390fd5b610440611628565b73ffffffffffffffffffffffffffffffffffffffff168560400160208101906104699190612899565b73ffffffffffffffffffffffffffffffffffffffff16146104b6576040517f53fde04000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008660200160208101906104cd9190612bc2565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff161561052c576040517f94009bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a858561058d6105888a8036038101906105839190612d6d565b611630565b611670565b6040518463ffffffff1660e01b81526004016105ab93929190612e96565b602060405180830381865afa1580156105c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ec9190612efb565b610622576040517f55d979c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016004600087602001602081019061063b9190612bc2565b63ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061067d81610678611628565b61171b565b610685611628565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168660200160208101906106c59190612bc2565b63ffffffff167fa2d160ed24716f0240546105d30a2e1efb2d5f23abb041888083bcc20083edd260405160405180910390a45050505050565b60006003600061070c611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461076190612f57565b80601f016020809104026020016040519081016040528092919081815260200182805461078d90612f57565b80156107da5780601f106107af576101008083540402835291602001916107da565b820191906000526020600020905b8154815290600101906020018083116107bd57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905060003482602001516108309190612fb7565b905067016345785d8a0000811015610874576040517fa8ded35f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828260000181905250808260200181815250506000826040018181525050600182608001901515908115158152505081600360006108b0611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816108ff919061318d565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050610949611628565b73ffffffffffffffffffffffffffffffffffffffff167f2e6a62283ed761c959aaa67da7e98c90c08118cadc35aae3c7b9d0b258a54405848360405161099092919061325f565b60405180910390a2505050565b60001515610ac5600360006109b0611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054610a0590612f57565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3190612f57565b8015610a7e5780601f10610a5357610100808354040283529160200191610a7e565b820191906000526020600020905b815481529060010190602001808311610a6157829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050611b93565b151503610afe576040517f84b90bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060036000610b0c611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054610b6190612f57565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8d90612f57565b8015610bda5780601f10610baf57610100808354040283529160200191610bda565b820191906000526020600020905b815481529060010190602001808311610bbd57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905060001515610c2b82611ba4565b151503610c64576040517feb533ee800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008160000151905060008260200151905060036000610c82611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610ccd9190612517565b6001820160009055600282016000905560038201600090556004820160006101000a81549060ff02191690555050610d0c610d06611628565b82611bc3565b610d14611628565b73ffffffffffffffffffffffffffffffffffffffff167f2e6a62283ed761c959aaa67da7e98c90c08118cadc35aae3c7b9d0b258a544058383604051610d5b92919061325f565b60405180910390a2505050565b6000610d72611c7f565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610dc05750825b9050600060018367ffffffffffffffff16148015610df5575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610e03575080155b15610e3a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610e8a5760018560000160086101000a81548160ff0219169083151502179055505b610e9a610e95611628565b611ca7565b610ea2611cbb565b866000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061dead600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610fc25760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610fb991906132de565b60405180910390a15b50505050505050565b610fd3611cc5565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61101f611d4c565b61102882611e32565b6110328282611e3d565b5050565b6000151561115e60036000611049611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461109e90612f57565b80601f01602080910402602001604051908101604052809291908181526020018280546110ca90612f57565b80156111175780601f106110ec57610100808354040283529160200191611117565b820191906000526020600020905b8154815290600101906020018083116110fa57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050611b93565b151503611197576040517f84b90bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360006111a5611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546111fa90612f57565b80601f016020809104026020016040519081016040528092919081815260200182805461122690612f57565b80156112735780601f1061124857610100808354040283529160200191611273565b820191906000526020600020905b81548152906001019060200180831161125657829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905042816040018181525050600081608001901515908115158152505080600360006112df611628565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161132e919061318d565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050611378611628565b73ffffffffffffffffffffffffffffffffffffffff167f61003f58033bb3da9d31643101595ff5f23aead3167e68857530f74c4430582b60405160405180910390a250565b60006113c7611f5c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b600360205280600052604060002060009150905080600001805461141390612f57565b80601f016020809104026020016040519081016040528092919081815260200182805461143f90612f57565b801561148c5780601f106114615761010080835404028352916020019161148c565b820191906000526020600020905b81548152906001019060200180831161146f57829003601f168201915b5050505050908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff169050919050565b61151c611cc5565b6115266000611fe3565b565b6000806115336120ba565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60006001905090565b6115aa611cc5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361161c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116139190612b2e565b60405180910390fd5b61162581611fe3565b50565b600033905090565b600081600001518260200151836040015160405160200161165393929190613398565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff81111561168f5761168e612687565b5b6040519080825280602002602001820160405280156116bd5781602001602082028036833780820191505090505b50905060005b6008811015611711576020816116d991906133d5565b84901b60e01c63ffffffff168282815181106116f8576116f7613417565b5b60200260200101818152505080806001019150506116c3565b5080915050919050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461177790612f57565b80601f01602080910402602001604051908101604052809291908181526020018280546117a390612f57565b80156117f05780601f106117c5576101008083540402835291602001916117f0565b820191906000526020600020905b8154815290600101906020018083116117d357829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090506000151561184182611b93565b15150361187a576040517f84b90bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018160600181815161188d9190612fb7565b9150818152505061189d816120e2565b1580156118ab575080608001515b156118c25760008160800190151590811515815250505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbebe1ecc1c646675c6bd0423039fd8cdde200d8e4dac2b345abdc23bf8d97a6960405160405180910390a367016345785d8a000081602001511015611a7757600081602001519050600082602001818152505081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611999919061318d565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600267016345785d8a00006119f09190613475565b811015611a0657611a018382611bc3565b611a70565b611a2483600267016345785d8a0000611a1f9190613475565b611bc3565b611a6f600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600267016345785d8a0000611a5f9190613475565b83611a6a91906134a6565b611bc3565b5b5050611b8f565b67016345785d8a000081602001818151611a9191906134a6565b9150818152505080600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611aed919061318d565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050611b4d82600267016345785d8a0000611b489190613475565b611bc3565b611b8d600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600267016345785d8a0000611b889190613475565b611bc3565b505b5050565b600080826020015114159050919050565b600062015180826040015142611bba91906134a6565b10159050919050565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051611be99061350b565b60006040518083038185875af1925050503d8060008114611c26576040519150601f19603f3d011682016040523d82523d6000602084013e611c2b565b606091505b505090506000151581151503611c7a5782826040517f3506b32c000000000000000000000000000000000000000000000000000000008152600401611c71929190613520565b60405180910390fd5b505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611caf6120fb565b611cb88161213b565b50565b611cc36120fb565b565b611ccd611628565b73ffffffffffffffffffffffffffffffffffffffff16611ceb611528565b73ffffffffffffffffffffffffffffffffffffffff1614611d4a57611d0e611628565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d419190612b2e565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480611df957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611de06121c1565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611e30576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611e3a611cc5565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611ea557506040513d601f19601f82011682018060405250810190611ea29190613549565b60015b611ee657816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611edd9190612b2e565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114611f4d57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401611f4491906129dc565b60405180910390fd5b611f578383612218565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611fe1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611fed6120ba565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600067016345785d8a0000826020015110159050919050565b61210361228b565b612139576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6121436120fb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036121b55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016121ac9190612b2e565b60405180910390fd5b6121be81611fe3565b50565b60006121ef7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6122ab565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612221826122b5565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a260008151111561227e576122788282612382565b50612287565b612286612406565b5b5050565b6000612295611c7f565b60000160089054906101000a900460ff16905090565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361231157806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016123089190612b2e565b60405180910390fd5b8061233e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6122ab565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516123ac91906135b2565b600060405180830381855af49150503d80600081146123e7576040519150601f19603f3d011682016040523d82523d6000602084013e6123ec565b606091505b50915091506123fc858383612443565b9250505092915050565b6000341115612441576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60608261245857612453826124d2565b6124ca565b60008251148015612480575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156124c257836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016124b99190612b2e565b60405180910390fd5b8190506124cb565b5b9392505050565b6000815111156124e55780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50805461252390612f57565b6000825580601f106125355750612554565b601f0160209004906000526020600020908101906125539190612557565b5b50565b5b80821115612570576000816000905550600101612558565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000606082840312156125a3576125a2612588565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126125d1576125d06125ac565b5b8235905067ffffffffffffffff8111156125ee576125ed6125b1565b5b60208301915083600182028301111561260a576126096125b6565b5b9250929050565b60008060006080848603121561262a5761262961257e565b5b60006126388682870161258d565b935050606084013567ffffffffffffffff81111561265957612658612583565b5b612665868287016125bb565b92509250509250925092565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126bf82612676565b810181811067ffffffffffffffff821117156126de576126dd612687565b5b80604052505050565b60006126f1612574565b90506126fd82826126b6565b919050565b600067ffffffffffffffff82111561271d5761271c612687565b5b61272682612676565b9050602081019050919050565b82818337600083830152505050565b600061275561275084612702565b6126e7565b90508281526020810184848401111561277157612770612671565b5b61277c848285612733565b509392505050565b600082601f830112612799576127986125ac565b5b81356127a9848260208601612742565b91505092915050565b6000602082840312156127c8576127c761257e565b5b600082013567ffffffffffffffff8111156127e6576127e5612583565b5b6127f284828501612784565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612826826127fb565b9050919050565b6128368161281b565b811461284157600080fd5b50565b6000813590506128538161282d565b92915050565b600080604083850312156128705761286f61257e565b5b600061287e85828601612844565b925050602061288f85828601612844565b9150509250929050565b6000602082840312156128af576128ae61257e565b5b60006128bd84828501612844565b91505092915050565b600067ffffffffffffffff8211156128e1576128e0612687565b5b6128ea82612676565b9050602081019050919050565b600061290a612905846128c6565b6126e7565b90508281526020810184848401111561292657612925612671565b5b612931848285612733565b509392505050565b600082601f83011261294e5761294d6125ac565b5b813561295e8482602086016128f7565b91505092915050565b6000806040838503121561297e5761297d61257e565b5b600061298c85828601612844565b925050602083013567ffffffffffffffff8111156129ad576129ac612583565b5b6129b985828601612939565b9150509250929050565b6000819050919050565b6129d6816129c3565b82525050565b60006020820190506129f160008301846129cd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612a31578082015181840152602081019050612a16565b60008484015250505050565b6000612a48826129f7565b612a528185612a02565b9350612a62818560208601612a13565b612a6b81612676565b840191505092915050565b6000819050919050565b612a8981612a76565b82525050565b60008115159050919050565b612aa481612a8f565b82525050565b600060a0820190508181036000830152612ac48188612a3d565b9050612ad36020830187612a80565b612ae06040830186612a80565b612aed6060830185612a80565b612afa6080830184612a9b565b9695505050505050565b6000602082019050612b196000830184612a9b565b92915050565b612b288161281b565b82525050565b6000602082019050612b436000830184612b1f565b92915050565b60006020820190508181036000830152612b638184612a3d565b905092915050565b6000602082019050612b806000830184612a80565b92915050565b600063ffffffff82169050919050565b612b9f81612b86565b8114612baa57600080fd5b50565b600081359050612bbc81612b96565b92915050565b600060208284031215612bd857612bd761257e565b5b6000612be684828501612bad565b91505092915050565b6000819050919050565b6000612c14612c0f612c0a84612b86565b612bef565b612a76565b9050919050565b612c2481612bf9565b82525050565b6000602082019050612c3f6000830184612c1b565b92915050565b612c4e816129c3565b8114612c5957600080fd5b50565b600081519050612c6b81612c45565b92915050565b600081519050612c808161282d565b92915050565b60008060408385031215612c9d57612c9c61257e565b5b6000612cab85828601612c5c565b9250506020612cbc85828601612c71565b9150509250929050565b6000604082019050612cdb60008301856129cd565b612ce860208301846129cd565b9392505050565b600080fd5b600081359050612d0381612c45565b92915050565b600060608284031215612d1f57612d1e612cef565b5b612d2960606126e7565b90506000612d3984828501612cf4565b6000830152506020612d4d84828501612bad565b6020830152506040612d6184828501612844565b60408301525092915050565b600060608284031215612d8357612d8261257e565b5b6000612d9184828501612d09565b91505092915050565b600082825260208201905092915050565b6000612db78385612d9a565b9350612dc4838584612733565b612dcd83612676565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612e0d81612a76565b82525050565b6000612e1f8383612e04565b60208301905092915050565b6000602082019050919050565b6000612e4382612dd8565b612e4d8185612de3565b9350612e5883612df4565b8060005b83811015612e89578151612e708882612e13565b9750612e7b83612e2b565b925050600181019050612e5c565b5085935050505092915050565b60006040820190508181036000830152612eb1818587612dab565b90508181036020830152612ec58184612e38565b9050949350505050565b612ed881612a8f565b8114612ee357600080fd5b50565b600081519050612ef581612ecf565b92915050565b600060208284031215612f1157612f1061257e565b5b6000612f1f84828501612ee6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612f6f57607f821691505b602082108103612f8257612f81612f28565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612fc282612a76565b9150612fcd83612a76565b9250828201905080821115612fe557612fe4612f88565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261304d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613010565b6130578683613010565b95508019841693508086168417925050509392505050565b600061308a61308561308084612a76565b612bef565b612a76565b9050919050565b6000819050919050565b6130a48361306f565b6130b86130b082613091565b84845461301d565b825550505050565b600090565b6130cd6130c0565b6130d881848461309b565b505050565b5b818110156130fc576130f16000826130c5565b6001810190506130de565b5050565b601f8211156131415761311281612feb565b61311b84613000565b8101602085101561312a578190505b61313e61313685613000565b8301826130dd565b50505b505050565b600082821c905092915050565b600061316460001984600802613146565b1980831691505092915050565b600061317d8383613153565b9150826002028217905092915050565b613196826129f7565b67ffffffffffffffff8111156131af576131ae612687565b5b6131b98254612f57565b6131c4828285613100565b600060209050601f8311600181146131f757600084156131e5578287015190505b6131ef8582613171565b865550613257565b601f19841661320586612feb565b60005b8281101561322d57848901518255600182019150602085019450602081019050613208565b8683101561324a5784890151613246601f891682613153565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526132798185612a3d565b90506132886020830184612a80565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60006132c86132c36132be8461328f565b612bef565b613299565b9050919050565b6132d8816132ad565b82525050565b60006020820190506132f360008301846132cf565b92915050565b6000819050919050565b61331461330f826129c3565b6132f9565b82525050565b60008160e01b9050919050565b60006133328261331a565b9050919050565b61334a61334582612b86565b613327565b82525050565b60008160601b9050919050565b600061336882613350565b9050919050565b600061337a8261335d565b9050919050565b61339261338d8261281b565b61336f565b82525050565b60006133a48286613303565b6020820191506133b48285613339565b6004820191506133c48284613381565b601482019150819050949350505050565b60006133e082612a76565b91506133eb83612a76565b92508282026133f981612a76565b915082820484148315176134105761340f612f88565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061348082612a76565b915061348b83612a76565b92508261349b5761349a613446565b5b828204905092915050565b60006134b182612a76565b91506134bc83612a76565b92508282039050818111156134d4576134d3612f88565b5b92915050565b600081905092915050565b50565b60006134f56000836134da565b9150613500826134e5565b600082019050919050565b6000613516826134e8565b9150819050919050565b60006040820190506135356000830185612b1f565b6135426020830184612a80565b9392505050565b60006020828403121561355f5761355e61257e565b5b600061356d84828501612c5c565b91505092915050565b600081519050919050565b600061358c82613576565b61359681856134da565b93506135a6818560208601612a13565b80840191505092915050565b60006135be8284613581565b91508190509291505056fea2646970667358221220c7fcdc605e44379fc9974ad59f33a109c5bc58b0285a86563cd5c829ba98137d64736f6c63430008180033";

type BlockBuilderRegistry2TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockBuilderRegistry2TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockBuilderRegistry2Test__factory extends ContractFactory {
  constructor(...args: BlockBuilderRegistry2TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlockBuilderRegistry2Test & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BlockBuilderRegistry2Test__factory {
    return super.connect(runner) as BlockBuilderRegistry2Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockBuilderRegistry2TestInterface {
    return new Interface(_abi) as BlockBuilderRegistry2TestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockBuilderRegistry2Test {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BlockBuilderRegistry2Test;
  }
}
