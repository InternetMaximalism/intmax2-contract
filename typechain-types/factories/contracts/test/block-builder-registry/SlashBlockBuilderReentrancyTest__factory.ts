/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SlashBlockBuilderReentrancyTest,
  SlashBlockBuilderReentrancyTestInterface,
} from "../../../../contracts/test/block-builder-registry/SlashBlockBuilderReentrancyTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_blockBuilderRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610244380380610244833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161012e6101166000396000600a015261012e6000f3fe6080604052366091577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663750d38cb600160026040518363ffffffff1660e01b8152600401606392919060d3565b600060405180830381600087803b158015607c57600080fd5b505af1158015608f573d6000803e3d6000fd5b005b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060bf826096565b9050919050565b60cd8160b6565b82525050565b600060408201905060e6600083018560c6565b60f1602083018460c6565b939250505056fea2646970667358221220417e79aac80130495e008d42ead002e8ce2eb38cf5d5dbe14495d205a9bd8d0164736f6c63430008180033";

type SlashBlockBuilderReentrancyTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SlashBlockBuilderReentrancyTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SlashBlockBuilderReentrancyTest__factory extends ContractFactory {
  constructor(...args: SlashBlockBuilderReentrancyTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _blockBuilderRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_blockBuilderRegistry, overrides || {});
  }
  override deploy(
    _blockBuilderRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_blockBuilderRegistry, overrides || {}) as Promise<
      SlashBlockBuilderReentrancyTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SlashBlockBuilderReentrancyTest__factory {
    return super.connect(runner) as SlashBlockBuilderReentrancyTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SlashBlockBuilderReentrancyTestInterface {
    return new Interface(_abi) as SlashBlockBuilderReentrancyTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SlashBlockBuilderReentrancyTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SlashBlockBuilderReentrancyTest;
  }
}
