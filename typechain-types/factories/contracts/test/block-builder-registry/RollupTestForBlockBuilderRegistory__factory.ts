/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  RollupTestForBlockBuilderRegistory,
  RollupTestForBlockBuilderRegistoryInterface,
} from "../../../../contracts/test/block-builder-registry/RollupTestForBlockBuilderRegistory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
    ],
    name: "getBlockHashAndBuilder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "key",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setTestData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610342806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063816274e11461003b578063e5b4668e14610057575b600080fd5b61005560048036038101906100509190610245565b610088565b005b610071600480360381019061006c9190610298565b61011e565b60405161007f9291906102e3565b60405180910390f35b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff168152506000808581526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6000806000808481526020019081526020016000206000015460008085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691509150915091565b600080fd5b6000819050919050565b61018e8161017b565b811461019957600080fd5b50565b6000813590506101ab81610185565b92915050565b6000819050919050565b6101c4816101b1565b81146101cf57600080fd5b50565b6000813590506101e1816101bb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610212826101e7565b9050919050565b61022281610207565b811461022d57600080fd5b50565b60008135905061023f81610219565b92915050565b60008060006060848603121561025e5761025d610176565b5b600061026c8682870161019c565b935050602061027d868287016101d2565b925050604061028e86828701610230565b9150509250925092565b6000602082840312156102ae576102ad610176565b5b60006102bc8482850161019c565b91505092915050565b6102ce816101b1565b82525050565b6102dd81610207565b82525050565b60006040820190506102f860008301856102c5565b61030560208301846102d4565b939250505056fea26469706673582212202ec0a928b1d53419fbeb6a94d69687b36133a9506507fa881fe3886a4b49240564736f6c63430008180033";

type RollupTestForBlockBuilderRegistoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupTestForBlockBuilderRegistoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupTestForBlockBuilderRegistory__factory extends ContractFactory {
  constructor(...args: RollupTestForBlockBuilderRegistoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RollupTestForBlockBuilderRegistory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RollupTestForBlockBuilderRegistory__factory {
    return super.connect(runner) as RollupTestForBlockBuilderRegistory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupTestForBlockBuilderRegistoryInterface {
    return new Interface(_abi) as RollupTestForBlockBuilderRegistoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RollupTestForBlockBuilderRegistory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RollupTestForBlockBuilderRegistory;
  }
}
