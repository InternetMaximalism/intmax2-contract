/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenData,
  TokenDataInterface,
} from "../../../contracts/liquidity/TokenData";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenInfo",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wbtc",
        type: "address",
      },
    ],
    name: "__TokenInfo_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610677806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a7f3084f14610030575b600080fd5b61004a60048036038101906100459190610565565b61004c565b005b610054610090565b600060028190555061006b600080600060016100d0565b5061007b600183600060016100d0565b5061008b600182600060016100d0565b505050565b61009861040d565b6100ce576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060025490506001600260008282546100eb91906105de565b925050819055506003604051806060016040528088600381111561011257610111610612565b5b81526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff0219169083600381111561018b5761018a610612565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816001015550508215610205576102038163ffffffff16600061042d90919063ffffffff16565b505b6000600381111561021957610218610612565b5b86600381111561022c5761022b610612565b5b036102985780600460008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080915050610405565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036102fe576040517f1eb00b0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600381111561031257610311610612565b5b86600381111561032557610324610612565b5b036103915780600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff16021790555080915050610405565b80600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550809150505b949350505050565b6000610417610447565b60000160089054906101000a900460ff16905090565b600061043f836000018360001b61046f565b905092915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600061047b83836104df565b6104d45782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506104d9565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061053282610507565b9050919050565b61054281610527565b811461054d57600080fd5b50565b60008135905061055f81610539565b92915050565b6000806040838503121561057c5761057b610502565b5b600061058a85828601610550565b925050602061059b85828601610550565b9150509250929050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105e9826105a5565b91506105f4836105a5565b925082820190508082111561060c5761060b6105af565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220027b1b26f319f49074627506de08e736ef9231916a653b14933cfe3261404d8b64736f6c63430008180033";

type TokenDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenData__factory extends ContractFactory {
  constructor(...args: TokenDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenData & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenData__factory {
    return super.connect(runner) as TokenData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenDataInterface {
    return new Interface(_abi) as TokenDataInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenData {
    return new Contract(address, _abi, runner) as unknown as TokenData;
  }
}
