/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenData,
  TokenDataInterface,
} from "../../../contracts/liquidity/TokenData";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTokenInfo",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "initialERC20Tokens",
        type: "address[]",
      },
    ],
    name: "__TokenData_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061075d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806320c7b8d014610030575b600080fd5b61004a60048036038101906100459190610613565b61004c565b005b6100546100a7565b61006160008060006100e7565b5060005b81518110156100a35761009560018383815181106100865761008561065c565b5b602002602001015160006100e7565b508080600101915050610065565b5050565b6100af610400565b6100e5576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000806000549050600160008082825461010191906106c4565b9250508190555060016040518060600160405280876003811115610128576101276106f8565b5b81526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548160ff021916908360038111156101a1576101a06106f8565b5b021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816001015550506000600381111561020d5761020c6106f8565b5b8560038111156102205761021f6106f8565b5b0361028c5780600260008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550809150506103f9565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036102f2576040517f1eb00b0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016003811115610306576103056106f8565b5b856003811115610319576103186106f8565b5b036103855780600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550809150506103f9565b80600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550809150505b9392505050565b600061040a610420565b60000160089054906101000a900460ff16905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104aa82610461565b810181811067ffffffffffffffff821117156104c9576104c8610472565b5b80604052505050565b60006104dc610448565b90506104e882826104a1565b919050565b600067ffffffffffffffff82111561050857610507610472565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105498261051e565b9050919050565b6105598161053e565b811461056457600080fd5b50565b60008135905061057681610550565b92915050565b600061058f61058a846104ed565b6104d2565b905080838252602082019050602084028301858111156105b2576105b1610519565b5b835b818110156105db57806105c78882610567565b8452602084019350506020810190506105b4565b5050509392505050565b600082601f8301126105fa576105f961045c565b5b813561060a84826020860161057c565b91505092915050565b60006020828403121561062957610628610452565b5b600082013567ffffffffffffffff81111561064757610646610457565b5b610653848285016105e5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106cf8261068b565b91506106da8361068b565b92508282019050808211156106f2576106f1610695565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212201fba597b5d0da3957535db91b3f74ae44ee6d702542ec40e67c3fcc9efb2aebf64736f6c63430008180033";

type TokenDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenData__factory extends ContractFactory {
  constructor(...args: TokenDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenData & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenData__factory {
    return super.connect(runner) as TokenData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenDataInterface {
    return new Interface(_abi) as TokenDataInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenData {
    return new Contract(address, _abi, runner) as unknown as TokenData;
  }
}
