/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Rollup,
  RollupInterface,
} from "../../../contracts/Rollup.sol/Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidityContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "blockBuilderRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "prevBlockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "BlockPosted",
    type: "event",
  },
  {
    inputs: [],
    name: "_blockBuilderRegistry",
    outputs: [
      {
        internalType: "contract IBlockBuilderRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_depositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_liquidityContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_scrollMessenger",
    outputs: [
      {
        internalType: "contract IScrollMessenger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isRegistrationBlock",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "txTreeRoot",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "senderFlags",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "publicKeysHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "accountIdsHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "aggregatedPublicKey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "aggregatedSignature",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[4]",
        name: "messagePoint",
        type: "uint256[4]",
      },
    ],
    name: "postBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "recipientSaltHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ILiquidity.Deposit[]",
        name: "deposits",
        type: "tuple[]",
      },
    ],
    name: "updateDepositTreeRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ca3380380610ca38339818101604052810190610032919061018b565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060046000801b90806001815401808255809150506001900390600052602060002001600090919091909150555050506101de565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101588261012d565b9050919050565b6101688161014d565b811461017357600080fd5b50565b6000815190506101858161015f565b92915050565b6000806000606084860312156101a4576101a3610128565b5b60006101b286828701610176565b93505060206101c386828701610176565b92505060406101d486828701610176565b9150509250925092565b610ab6806101ed6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063903a68941161005b578063903a689414610117578063a9f6458f14610133578063aa8fc35b14610151578063d2b210a11461016f57610088565b8063045d96101461008d578063048de2f6146100ab5780630fd8f9dd146100c957806348253b7a146100e7575b600080fd5b61009561019f565b6040516100a291906103e9565b60405180910390f35b6100b36101c5565b6040516100c0919061041d565b60405180910390f35b6100d16101cf565b6040516100de919061041d565b60405180910390f35b61010160048036038101906100fc9190610537565b6101d5565b60405161010e9190610607565b60405180910390f35b610131600480360381019061012c9190610682565b6102e3565b005b61013b6102f7565b604051610148919061072e565b60405180910390f35b61015961031d565b604051610166919061076a565b60405180910390f35b610189600480360381019061018491906107c1565b610341565b604051610196919061041d565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600354905090565b60035481565b60008089898989898989896040516020016101f79897969594939291906108b6565b6040516020818303038152906040528051906020012090506004805490509150600060046001846102289190610977565b81548110610239576102386109ab565b5b9060005260206000200154905060006003549050600461025b8383868861036f565b90806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16827fe27163b76905dc373b4ad854ddc9403bbac659c5f1c5191c39e5a7c44574040a8684876040516102cc939291906109da565b60405180910390a350505098975050505050505050565b60008060001b905080600381905550505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060048263ffffffff168154811061035d5761035c6109ab565b5b90600052602060002001549050919050565b6000848484846040516020016103889493929190610a32565b604051602081830303815290604052805190602001209050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103d3826103a8565b9050919050565b6103e3816103c8565b82525050565b60006020820190506103fe60008301846103da565b92915050565b6000819050919050565b61041781610404565b82525050565b6000602082019050610432600083018461040e565b92915050565b600080fd5b600080fd5b60008115159050919050565b61045781610442565b811461046257600080fd5b50565b6000813590506104748161044e565b92915050565b61048381610404565b811461048e57600080fd5b50565b6000813590506104a08161047a565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6104cb816104a6565b81146104d657600080fd5b50565b6000813590506104e8816104c2565b92915050565b600080fd5b60008190508260206002028201111561050f5761050e6104ee565b5b92915050565b600081905082602060040282011115610531576105306104ee565b5b92915050565b6000806000806000806000806101e0898b03121561055857610557610438565b5b60006105668b828c01610465565b98505060206105778b828c01610491565b97505060406105888b828c016104d9565b96505060606105998b828c01610491565b95505060806105aa8b828c01610491565b94505060a06105bb8b828c016104f3565b93505060e06105cc8b828c01610515565b9250506101606105de8b828c01610515565b9150509295985092959890939650565b6000819050919050565b610601816105ee565b82525050565b600060208201905061061c60008301846105f8565b92915050565b600080fd5b600080fd5b60008083601f84011261064257610641610622565b5b8235905067ffffffffffffffff81111561065f5761065e610627565b5b60208301915083606082028301111561067b5761067a6104ee565b5b9250929050565b6000806020838503121561069957610698610438565b5b600083013567ffffffffffffffff8111156106b7576106b661043d565b5b6106c38582860161062c565b92509250509250929050565b6000819050919050565b60006106f46106ef6106ea846103a8565b6106cf565b6103a8565b9050919050565b6000610706826106d9565b9050919050565b6000610718826106fb565b9050919050565b6107288161070d565b82525050565b6000602082019050610743600083018461071f565b92915050565b6000610754826106fb565b9050919050565b61076481610749565b82525050565b600060208201905061077f600083018461075b565b92915050565b600063ffffffff82169050919050565b61079e81610785565b81146107a957600080fd5b50565b6000813590506107bb81610795565b92915050565b6000602082840312156107d7576107d6610438565b5b60006107e5848285016107ac565b91505092915050565b60008160f81b9050919050565b6000610806826107ee565b9050919050565b6000610818826107fb565b9050919050565b61083061082b82610442565b61080d565b82525050565b6000819050919050565b61085161084c82610404565b610836565b82525050565b60008160801b9050919050565b600061086f82610857565b9050919050565b610887610882826104a6565b610864565b82525050565b82818337505050565b6108a26040838361088d565b5050565b6108b26080838361088d565b5050565b60006108c2828b61081f565b6001820191506108d2828a610840565b6020820191506108e28289610876565b6010820191506108f28288610840565b6020820191506109028287610840565b6020820191506109128286610896565b60408201915061092282856108a6565b60808201915061093282846108a6565b6080820191508190509998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610982826105ee565b915061098d836105ee565b92508282039050818111156109a5576109a4610948565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820190506109ef60008301866105f8565b6109fc602083018561040e565b610a09604083018461040e565b949350505050565b6000819050919050565b610a2c610a27826105ee565b610a11565b82525050565b6000610a3e8287610840565b602082019150610a4e8286610840565b602082019150610a5e8285610840565b602082019150610a6e8284610a1b565b6020820191508190509594505050505056fea26469706673582212209ced5ae58b3c05e14b6b0db6b6c43e55ac1d5f47bac2a66d1b1bbd4139ae21f364736f6c63430008140033";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    scrollMessenger: PromiseOrValue<string>,
    liquidityContract: PromiseOrValue<string>,
    blockBuilderRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Rollup> {
    return super.deploy(
      scrollMessenger,
      liquidityContract,
      blockBuilderRegistry,
      overrides || {}
    ) as Promise<Rollup>;
  }
  override getDeployTransaction(
    scrollMessenger: PromiseOrValue<string>,
    liquidityContract: PromiseOrValue<string>,
    blockBuilderRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      scrollMessenger,
      liquidityContract,
      blockBuilderRegistry,
      overrides || {}
    );
  }
  override attach(address: string): Rollup {
    return super.attach(address) as Rollup;
  }
  override connect(signer: Signer): Rollup__factory {
    return super.connect(signer) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new utils.Interface(_abi) as RollupInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup {
    return new Contract(address, _abi, signerOrProvider) as Rollup;
  }
}
