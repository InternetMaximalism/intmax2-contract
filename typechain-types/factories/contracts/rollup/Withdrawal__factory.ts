/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Withdrawal,
  WithdrawalInterface,
} from "../../../contracts/rollup/Withdrawal";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "BlockHashNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "QueueIsEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "QueueIsEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TooManyRelayClaimableWithdrawals",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TooManyRelayDirectWithdrawals",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalAggregatorMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestIndex",
        type: "uint256",
      },
    ],
    name: "WithdrawalBlockHashNotPosted",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalChainVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalsHashMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "ClaimableWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "DirectWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "postedBlockHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "processUpToId",
        type: "uint256",
      },
    ],
    name: "relayClaimableWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "processUpToId",
        type: "uint256",
      },
    ],
    name: "relayDirectWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ChainedWithdrawalLib.ChainedWithdrawal[]",
        name: "withdrawals",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "lastWithdrawalHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "withdrawalAggregator",
            type: "address",
          },
        ],
        internalType:
          "struct WithdrawalProofPublicInputsLib.WithdrawalProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitWithdrawalProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b96806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f8f9c51146100515780632b8d1b5c1461008157806338d78c781461009d57806380418ca0146100b9575b600080fd5b61006b60048036038101906100669190610e77565b6100d5565b6040516100789190610ebd565b60405180910390f35b61009b60048036038101906100969190610f04565b6100ed565b005b6100b760048036038101906100b29190610f04565b610276565b005b6100d360048036038101906100ce9190611010565b610409565b005b600c6020528060005260406000206000915090505481565b6006600201548111156101035760066002015490505b60006006600101548261011691906110d4565b9050601481111561015e57806040517f21a47f9e0000000000000000000000000000000000000000000000000000000081526004016101559190610ebd565b60405180910390fd5b60008167ffffffffffffffff81111561017a57610179611108565b5b6040519080825280602002602001820160405280156101a85781602001602082028036833780820191505090505b50905060005b828110156101ec576101c060066107bc565b8282815181106101d3576101d2611137565b5b60200260200101818152505080806001019150506101ae565b50600063a6e2c3c060e01b826040516024016102089190611224565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506102708161084a565b50505050565b60036002015481111561028c5760036002015490505b60006003600101548261029f91906110d4565b905060148111156102e757806040517f26ce64830000000000000000000000000000000000000000000000000000000081526004016102de9190610ebd565b60405180910390fd5b60008167ffffffffffffffff81111561030357610302611108565b5b60405190808252806020026020018201604052801561033c57816020015b610329610de6565b8152602001906001900390816103215790505b50905060005b8281101561037f57610354600361090f565b82828151811061036757610366611137565b5b60200260200101819052508080600101915050610342565b50600063a6e2c3c060e01b8260405160240161039b91906113b9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506104038161084a565b50505050565b61047683600001358686808060200260200160405190810160405280939291908181526020016000905b8282101561046357848483905060a002018036038101906104549190611521565b81526020019060010190610433565b5050505050610a4190919063ffffffff16565b6104ac576040517ffbf63aef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b4610aad565b73ffffffffffffffffffffffffffffffffffffffff168360200160208101906104dd919061154e565b505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a838361053e6105398880360381019061053491906115cb565b610ab5565b610aef565b6040518463ffffffff1660e01b815260040161055c939291906116f4565b602060405180830381865afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d9190611765565b6105d3576040517f38a3efc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b858590508110156107b45760008686838181106105f6576105f5611137565b5b905060a0020180360381019061060c9190611521565b90506000600c600083608001518152602001908152602001600020505060011515600960008360600151815260200190815260200160002060009054906101000a900460ff1615150361065f57506107a7565b6001600960008360600151815260200190815260200160002060006101000a81548160ff02191690831515021790555060006040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015163ffffffff16815260200183604001518152602001836060015181525090506106ed8260200151610b9a565b15610749576000610708826003610bbd90919063ffffffff16565b90507f0af6a8ebe64b057b7fcbff08dc274ee360a5ab420d71b826f44bec6d7054eb77818360405161073b9291906117e7565b60405180910390a1506107a4565b600061076761075783610c98565b6006610cde90919063ffffffff16565b90507fe11632f77dbd388725302b85b3a1557329e8be0f3207f6defdae78e229a38936818360405161079a9291906117e7565b60405180910390a1505b50505b80806001019150506105d6565b505050505050565b60006107c782610d32565b156107fe576040517f63c3654900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000183600101548154811061081a57610819611137565b5b9060005260206000200154905082600101600081548092919061083c90611810565b919050555080915050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f7b15776000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008560006108ba610aad565b6040518763ffffffff1660e01b81526004016108da95949392919061191a565b6000604051808303818588803b1580156108f357600080fd5b505af1158015610907573d6000803e3d6000fd5b505050505050565b610917610de6565b61092082610d46565b15610957576040517f63c3654900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000183600101548154811061097357610972611137565b5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481526020016002820154815250509050826001016000815480929190610a3390611810565b919050555080915050919050565b6000806000801b905060005b8451811015610a8f576000858281518110610a6b57610a6a611137565b5b60200260200101519050610a7f8184610d5a565b9250508080600101915050610a4d565b50828114610aa1576000915050610aa7565b60019150505b92915050565b600033905090565b600081600001518260200151604051602001610ad29291906119dd565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff811115610b0e57610b0d611108565b5b604051908082528060200260200182016040528015610b3c5781602001602082028036833780820191505090505b50905060005b6008811015610b9057602081610b589190611a09565b84901b60e01c63ffffffff16828281518110610b7757610b76611137565b5b6020026020010181815250508080600101915050610b42565b5080915050919050565b6000610bb68263ffffffff16600a610da990919063ffffffff16565b9050919050565b60008260000182908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff1602179055506040820151816001015560608201518160020155505082600201549050826002016000815480929190610c8d90611810565b919050555092915050565b60008160000151826020015183604001518460600151604051602001610cc19493929190611aa2565b604051602081830303815290604052805190602001209050919050565b60008260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600201549050826002016000815480929190610d2790611810565b919050555092915050565b600081600201548260010154149050919050565b600081600201548260010154149050919050565b60008183600001518460200151856040015186606001518760800151604051602001610d8b96959493929190611af0565b60405160208183030381529060405280519060200120905092915050565b6000610dbb836000018360001b610dc3565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160008152602001600080191681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610e5481610e41565b8114610e5f57600080fd5b50565b600081359050610e7181610e4b565b92915050565b600060208284031215610e8d57610e8c610e37565b5b6000610e9b84828501610e62565b91505092915050565b6000819050919050565b610eb781610ea4565b82525050565b6000602082019050610ed26000830184610eae565b92915050565b610ee181610ea4565b8114610eec57600080fd5b50565b600081359050610efe81610ed8565b92915050565b600060208284031215610f1a57610f19610e37565b5b6000610f2884828501610eef565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f5657610f55610f31565b5b8235905067ffffffffffffffff811115610f7357610f72610f36565b5b6020830191508360a0820283011115610f8f57610f8e610f3b565b5b9250929050565b600080fd5b600060408284031215610fb157610fb0610f96565b5b81905092915050565b60008083601f840112610fd057610fcf610f31565b5b8235905067ffffffffffffffff811115610fed57610fec610f36565b5b60208301915083600182028301111561100957611008610f3b565b5b9250929050565b60008060008060006080868803121561102c5761102b610e37565b5b600086013567ffffffffffffffff81111561104a57611049610e3c565b5b61105688828901610f40565b9550955050602061106988828901610f9b565b935050606086013567ffffffffffffffff81111561108a57611089610e3c565b5b61109688828901610fba565b92509250509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110df82610ea4565b91506110ea83610ea4565b9250828203905081811115611102576111016110a5565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61119b81610e41565b82525050565b60006111ad8383611192565b60208301905092915050565b6000602082019050919050565b60006111d182611166565b6111db8185611171565b93506111e683611182565b8060005b838110156112175781516111fe88826111a1565b9750611209836111b9565b9250506001810190506111ea565b5085935050505092915050565b6000602082019050818103600083015261123e81846111c6565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061129d82611272565b9050919050565b6112ad81611292565b82525050565b600063ffffffff82169050919050565b6112cc816112b3565b82525050565b6112db81610ea4565b82525050565b6080820160008201516112f760008501826112a4565b50602082015161130a60208501826112c3565b50604082015161131d60408501826112d2565b5060608201516113306060850182611192565b50505050565b600061134283836112e1565b60808301905092915050565b6000602082019050919050565b600061136682611246565b6113708185611251565b935061137b83611262565b8060005b838110156113ac5781516113938882611336565b975061139e8361134e565b92505060018101905061137f565b5085935050505092915050565b600060208201905081810360008301526113d3818461135b565b905092915050565b600080fd5b6000601f19601f8301169050919050565b6113fa826113e0565b810181811067ffffffffffffffff8211171561141957611418611108565b5b80604052505050565b600061142c610e2d565b905061143882826113f1565b919050565b61144681611292565b811461145157600080fd5b50565b6000813590506114638161143d565b92915050565b611472816112b3565b811461147d57600080fd5b50565b60008135905061148f81611469565b92915050565b600060a082840312156114ab576114aa6113db565b5b6114b560a0611422565b905060006114c584828501611454565b60008301525060206114d984828501611480565b60208301525060406114ed84828501610eef565b604083015250606061150184828501610e62565b606083015250608061151584828501610e62565b60808301525092915050565b600060a0828403121561153757611536610e37565b5b600061154584828501611495565b91505092915050565b60006020828403121561156457611563610e37565b5b600061157284828501611454565b91505092915050565b600060408284031215611591576115906113db565b5b61159b6040611422565b905060006115ab84828501610e62565b60008301525060206115bf84828501611454565b60208301525092915050565b6000604082840312156115e1576115e0610e37565b5b60006115ef8482850161157b565b91505092915050565b600082825260208201905092915050565b82818337600083830152505050565b600061162483856115f8565b9350611631838584611609565b61163a836113e0565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061167d83836112d2565b60208301905092915050565b6000602082019050919050565b60006116a182611645565b6116ab8185611650565b93506116b683611661565b8060005b838110156116e75781516116ce8882611671565b97506116d983611689565b9250506001810190506116ba565b5085935050505092915050565b6000604082019050818103600083015261170f818587611618565b905081810360208301526117238184611696565b9050949350505050565b60008115159050919050565b6117428161172d565b811461174d57600080fd5b50565b60008151905061175f81611739565b92915050565b60006020828403121561177b5761177a610e37565b5b600061178984828501611750565b91505092915050565b6080820160008201516117a860008501826112a4565b5060208201516117bb60208501826112c3565b5060408201516117ce60408501826112d2565b5060608201516117e16060850182611192565b50505050565b600060a0820190506117fc6000830185610eae565b6118096020830184611792565b9392505050565b600061181b82610ea4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361184d5761184c6110a5565b5b600182019050919050565b61186181611292565b82525050565b6000819050919050565b6000819050919050565b600061189661189161188c84611867565b611871565b610ea4565b9050919050565b6118a68161187b565b82525050565b600081519050919050565b60005b838110156118d55780820151818401526020810190506118ba565b60008484015250505050565b60006118ec826118ac565b6118f681856115f8565b93506119068185602086016118b7565b61190f816113e0565b840191505092915050565b600060a08201905061192f6000830188611858565b61193c602083018761189d565b818103604083015261194e81866118e1565b905061195d606083018561189d565b61196a6080830184611858565b9695505050505050565b6000819050919050565b61198f61198a82610e41565b611974565b82525050565b60008160601b9050919050565b60006119ad82611995565b9050919050565b60006119bf826119a2565b9050919050565b6119d76119d282611292565b6119b4565b82525050565b60006119e9828561197e565b6020820191506119f982846119c6565b6014820191508190509392505050565b6000611a1482610ea4565b9150611a1f83610ea4565b9250828202611a2d81610ea4565b91508282048414831517611a4457611a436110a5565b5b5092915050565b60008160e01b9050919050565b6000611a6382611a4b565b9050919050565b611a7b611a76826112b3565b611a58565b82525050565b6000819050919050565b611a9c611a9782610ea4565b611a81565b82525050565b6000611aae82876119c6565b601482019150611abe8286611a6a565b600482019150611ace8285611a8b565b602082019150611ade828461197e565b60208201915081905095945050505050565b6000611afc828961197e565b602082019150611b0c82886119c6565b601482019150611b1c8287611a6a565b600482019150611b2c8286611a8b565b602082019150611b3c828561197e565b602082019150611b4c828461197e565b60208201915081905097965050505050505056fea26469706673582212203e4091520197b513dbb1651db12bb3886612dce77bbc2f3eeb6a44587d1e81d164736f6c63430008180033";

type WithdrawalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Withdrawal__factory extends ContractFactory {
  constructor(...args: WithdrawalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Withdrawal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Withdrawal__factory {
    return super.connect(runner) as Withdrawal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalInterface {
    return new Interface(_abi) as WithdrawalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Withdrawal {
    return new Contract(address, _abi, runner) as unknown as Withdrawal;
  }
}
