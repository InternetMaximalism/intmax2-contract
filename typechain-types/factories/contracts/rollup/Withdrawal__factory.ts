/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Withdrawal,
  WithdrawalInterface,
} from "../../../contracts/rollup/Withdrawal";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "BlockHashNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "QueueIsEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "QueueIsEmpty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TooManyRelayClaimableWithdrawals",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "TooManyRelayDirectWithdrawals",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalAggregatorMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestIndex",
        type: "uint256",
      },
    ],
    name: "WithdrawalBlockHashNotPosted",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalChainVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalsHashMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "ClaimableWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "DirectWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "getClaimableWithdrawalsQueueSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDirectWithdrawalsQueueSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "postedBlockHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "processUpToId",
        type: "uint256",
      },
    ],
    name: "relayClaimableWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "processUpToId",
        type: "uint256",
      },
    ],
    name: "relayDirectWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ChainedWithdrawalLib.ChainedWithdrawal[]",
        name: "withdrawals",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "lastWithdrawalHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "withdrawalAggregator",
            type: "address",
          },
        ],
        internalType:
          "struct WithdrawalProofPublicInputsLib.WithdrawalProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitWithdrawalProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c44806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631f8f9c51146100675780632b8d1b5c1461009757806338d78c78146100b357806380418ca0146100cf5780639ebc2cf6146100eb578063f21161ce14610109575b600080fd5b610081600480360381019061007c9190610f25565b610127565b60405161008e9190610f6b565b60405180910390f35b6100b160048036038101906100ac9190610fb2565b61013f565b005b6100cd60048036038101906100c89190610fb2565b6102c8565b005b6100e960048036038101906100e491906110be565b61045b565b005b6100f361080e565b6040516101009190610f6b565b60405180910390f35b61011161081f565b60405161011e9190610f6b565b60405180910390f35b600c6020528060005260406000206000915090505481565b6006600201548111156101555760066002015490505b6000600660010154826101689190611182565b905060148111156101b057806040517f21a47f9e0000000000000000000000000000000000000000000000000000000081526004016101a79190610f6b565b60405180910390fd5b60008167ffffffffffffffff8111156101cc576101cb6111b6565b5b6040519080825280602002602001820160405280156101fa5781602001602082028036833780820191505090505b50905060005b8281101561023e576102126006610830565b828281518110610225576102246111e5565b5b6020026020010181815250508080600101915050610200565b50600063a6e2c3c060e01b8260405160240161025a91906112d2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506102c2816108be565b50505050565b6003600201548111156102de5760036002015490505b6000600360010154826102f19190611182565b9050601481111561033957806040517f26ce64830000000000000000000000000000000000000000000000000000000081526004016103309190610f6b565b60405180910390fd5b60008167ffffffffffffffff811115610355576103546111b6565b5b60405190808252806020026020018201604052801561038e57816020015b61037b610e94565b8152602001906001900390816103735790505b50905060005b828110156103d1576103a66003610983565b8282815181106103b9576103b86111e5565b5b60200260200101819052508080600101915050610394565b50600063a6e2c3c060e01b826040516024016103ed9190611467565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610455816108be565b50505050565b6104c883600001358686808060200260200160405190810160405280939291908181526020016000905b828210156104b557848483905060a002018036038101906104a691906115cf565b81526020019060010190610485565b5050505050610ab590919063ffffffff16565b6104fe576040517ffbf63aef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610506610b21565b73ffffffffffffffffffffffffffffffffffffffff1683602001602081019061052f91906115fc565b505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a838361059061058b888036038101906105869190611679565b610b29565b610b63565b6040518463ffffffff1660e01b81526004016105ae939291906117a2565b602060405180830381865afa1580156105cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ef9190611813565b610625576040517f38a3efc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85859050811015610806576000868683818110610648576106476111e5565b5b905060a0020180360381019061065e91906115cf565b90506000600c600083608001518152602001908152602001600020505060011515600960008360600151815260200190815260200160002060009054906101000a900460ff161515036106b157506107f9565b6001600960008360600151815260200190815260200160002060006101000a81548160ff02191690831515021790555060006040518060800160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015163ffffffff168152602001836040015181526020018360600151815250905061073f8260200151610c0e565b1561079b57600061075a826003610c3190919063ffffffff16565b90507f0af6a8ebe64b057b7fcbff08dc274ee360a5ab420d71b826f44bec6d7054eb77818360405161078d929190611895565b60405180910390a1506107f6565b60006107b96107a983610d0c565b6006610d5290919063ffffffff16565b90507fe11632f77dbd388725302b85b3a1557329e8be0f3207f6defdae78e229a3893681836040516107ec929190611895565b60405180910390a1505b50505b8080600101915050610628565b505050505050565b600061081a6003610da6565b905090565b600061082b6006610dc3565b905090565b600061083b82610de0565b15610872576040517f63c3654900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260000183600101548154811061088e5761088d6111e5565b5b906000526020600020015490508260010160008154809291906108b0906118be565b919050555080915050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f7b15776000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600085600061092e610b21565b6040518763ffffffff1660e01b815260040161094e9594939291906119c8565b6000604051808303818588803b15801561096757600080fd5b505af115801561097b573d6000803e3d6000fd5b505050505050565b61098b610e94565b61099482610df4565b156109cb576040517f63c3654900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000826000018360010154815481106109e7576109e66111e5565b5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff168152602001600182015481526020016002820154815250509050826001016000815480929190610aa7906118be565b919050555080915050919050565b6000806000801b905060005b8451811015610b03576000858281518110610adf57610ade6111e5565b5b60200260200101519050610af38184610e08565b9250508080600101915050610ac1565b50828114610b15576000915050610b1b565b60019150505b92915050565b600033905090565b600081600001518260200151604051602001610b46929190611a8b565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff811115610b8257610b816111b6565b5b604051908082528060200260200182016040528015610bb05781602001602082028036833780820191505090505b50905060005b6008811015610c0457602081610bcc9190611ab7565b84901b60e01c63ffffffff16828281518110610beb57610bea6111e5565b5b6020026020010181815250508080600101915050610bb6565b5080915050919050565b6000610c2a8263ffffffff16600a610e5790919063ffffffff16565b9050919050565b60008260000182908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff1602179055506040820151816001015560608201518160020155505082600201549050826002016000815480929190610d01906118be565b919050555092915050565b60008160000151826020015183604001518460600151604051602001610d359493929190611b50565b604051602081830303815290604052805190602001209050919050565b60008260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600201549050826002016000815480929190610d9b906118be565b919050555092915050565b600081600101548260020154610dbc9190611182565b9050919050565b600081600101548260020154610dd99190611182565b9050919050565b600081600201548260010154149050919050565b600081600201548260010154149050919050565b60008183600001518460200151856040015186606001518760800151604051602001610e3996959493929190611b9e565b60405160208183030381529060405280519060200120905092915050565b6000610e69836000018360001b610e71565b905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160008152602001600080191681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610f0281610eef565b8114610f0d57600080fd5b50565b600081359050610f1f81610ef9565b92915050565b600060208284031215610f3b57610f3a610ee5565b5b6000610f4984828501610f10565b91505092915050565b6000819050919050565b610f6581610f52565b82525050565b6000602082019050610f806000830184610f5c565b92915050565b610f8f81610f52565b8114610f9a57600080fd5b50565b600081359050610fac81610f86565b92915050565b600060208284031215610fc857610fc7610ee5565b5b6000610fd684828501610f9d565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261100457611003610fdf565b5b8235905067ffffffffffffffff81111561102157611020610fe4565b5b6020830191508360a082028301111561103d5761103c610fe9565b5b9250929050565b600080fd5b60006040828403121561105f5761105e611044565b5b81905092915050565b60008083601f84011261107e5761107d610fdf565b5b8235905067ffffffffffffffff81111561109b5761109a610fe4565b5b6020830191508360018202830111156110b7576110b6610fe9565b5b9250929050565b6000806000806000608086880312156110da576110d9610ee5565b5b600086013567ffffffffffffffff8111156110f8576110f7610eea565b5b61110488828901610fee565b9550955050602061111788828901611049565b935050606086013567ffffffffffffffff81111561113857611137610eea565b5b61114488828901611068565b92509250509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118d82610f52565b915061119883610f52565b92508282039050818111156111b0576111af611153565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61124981610eef565b82525050565b600061125b8383611240565b60208301905092915050565b6000602082019050919050565b600061127f82611214565b611289818561121f565b935061129483611230565b8060005b838110156112c55781516112ac888261124f565b97506112b783611267565b925050600181019050611298565b5085935050505092915050565b600060208201905081810360008301526112ec8184611274565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061134b82611320565b9050919050565b61135b81611340565b82525050565b600063ffffffff82169050919050565b61137a81611361565b82525050565b61138981610f52565b82525050565b6080820160008201516113a56000850182611352565b5060208201516113b86020850182611371565b5060408201516113cb6040850182611380565b5060608201516113de6060850182611240565b50505050565b60006113f0838361138f565b60808301905092915050565b6000602082019050919050565b6000611414826112f4565b61141e81856112ff565b935061142983611310565b8060005b8381101561145a57815161144188826113e4565b975061144c836113fc565b92505060018101905061142d565b5085935050505092915050565b600060208201905081810360008301526114818184611409565b905092915050565b600080fd5b6000601f19601f8301169050919050565b6114a88261148e565b810181811067ffffffffffffffff821117156114c7576114c66111b6565b5b80604052505050565b60006114da610edb565b90506114e6828261149f565b919050565b6114f481611340565b81146114ff57600080fd5b50565b600081359050611511816114eb565b92915050565b61152081611361565b811461152b57600080fd5b50565b60008135905061153d81611517565b92915050565b600060a0828403121561155957611558611489565b5b61156360a06114d0565b9050600061157384828501611502565b60008301525060206115878482850161152e565b602083015250604061159b84828501610f9d565b60408301525060606115af84828501610f10565b60608301525060806115c384828501610f10565b60808301525092915050565b600060a082840312156115e5576115e4610ee5565b5b60006115f384828501611543565b91505092915050565b60006020828403121561161257611611610ee5565b5b600061162084828501611502565b91505092915050565b60006040828403121561163f5761163e611489565b5b61164960406114d0565b9050600061165984828501610f10565b600083015250602061166d84828501611502565b60208301525092915050565b60006040828403121561168f5761168e610ee5565b5b600061169d84828501611629565b91505092915050565b600082825260208201905092915050565b82818337600083830152505050565b60006116d283856116a6565b93506116df8385846116b7565b6116e88361148e565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061172b8383611380565b60208301905092915050565b6000602082019050919050565b600061174f826116f3565b61175981856116fe565b93506117648361170f565b8060005b8381101561179557815161177c888261171f565b975061178783611737565b925050600181019050611768565b5085935050505092915050565b600060408201905081810360008301526117bd8185876116c6565b905081810360208301526117d18184611744565b9050949350505050565b60008115159050919050565b6117f0816117db565b81146117fb57600080fd5b50565b60008151905061180d816117e7565b92915050565b60006020828403121561182957611828610ee5565b5b6000611837848285016117fe565b91505092915050565b6080820160008201516118566000850182611352565b5060208201516118696020850182611371565b50604082015161187c6040850182611380565b50606082015161188f6060850182611240565b50505050565b600060a0820190506118aa6000830185610f5c565b6118b76020830184611840565b9392505050565b60006118c982610f52565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036118fb576118fa611153565b5b600182019050919050565b61190f81611340565b82525050565b6000819050919050565b6000819050919050565b600061194461193f61193a84611915565b61191f565b610f52565b9050919050565b61195481611929565b82525050565b600081519050919050565b60005b83811015611983578082015181840152602081019050611968565b60008484015250505050565b600061199a8261195a565b6119a481856116a6565b93506119b4818560208601611965565b6119bd8161148e565b840191505092915050565b600060a0820190506119dd6000830188611906565b6119ea602083018761194b565b81810360408301526119fc818661198f565b9050611a0b606083018561194b565b611a186080830184611906565b9695505050505050565b6000819050919050565b611a3d611a3882610eef565b611a22565b82525050565b60008160601b9050919050565b6000611a5b82611a43565b9050919050565b6000611a6d82611a50565b9050919050565b611a85611a8082611340565b611a62565b82525050565b6000611a978285611a2c565b602082019150611aa78284611a74565b6014820191508190509392505050565b6000611ac282610f52565b9150611acd83610f52565b9250828202611adb81610f52565b91508282048414831517611af257611af1611153565b5b5092915050565b60008160e01b9050919050565b6000611b1182611af9565b9050919050565b611b29611b2482611361565b611b06565b82525050565b6000819050919050565b611b4a611b4582610f52565b611b2f565b82525050565b6000611b5c8287611a74565b601482019150611b6c8286611b18565b600482019150611b7c8285611b39565b602082019150611b8c8284611a2c565b60208201915081905095945050505050565b6000611baa8289611a2c565b602082019150611bba8288611a74565b601482019150611bca8287611b18565b600482019150611bda8286611b39565b602082019150611bea8285611a2c565b602082019150611bfa8284611a2c565b60208201915081905097965050505050505056fea2646970667358221220a0a315c1efa59128256e73b8a17679975901842e71dbd9e53402d1ea1251a54e64736f6c63430008180033";

type WithdrawalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Withdrawal__factory extends ContractFactory {
  constructor(...args: WithdrawalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Withdrawal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Withdrawal__factory {
    return super.connect(runner) as Withdrawal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawalInterface {
    return new Interface(_abi) as WithdrawalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Withdrawal {
    return new Contract(address, _abi, runner) as unknown as Withdrawal;
  }
}
