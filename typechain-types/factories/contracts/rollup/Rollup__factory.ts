/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Rollup, RollupInterface } from "../../../contracts/rollup/Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "BlockHashAlreadyPosted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "given",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "expected",
        type: "bytes32",
      },
    ],
    name: "BlockHashMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "BlockHashNotExists",
    type: "error",
  },
  {
    inputs: [],
    name: "ChallengerMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBlockBuilder",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "MerkleTreeFull",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyScrollMessenger",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PairingCheckFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderAccountIdsEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderAccountIdsInvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SenderPublicKeysEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyAccountIds",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManySenderPublicKeys",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalAggregatorMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestIndex",
        type: "uint256",
      },
    ],
    name: "WithdrawalBlockHashNotPosted",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalChainVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalsHashMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "accountIds",
        type: "bytes",
      },
    ],
    name: "AccountIdsPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "BlockFraudProofSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "prevBlockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "BlockPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "ClaimableWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
    ],
    name: "DepositsProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct WithdrawalLib.Withdrawal",
        name: "withdrawal",
        type: "tuple",
      },
    ],
    name: "DirectWithdrawalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "senderPublicKeys",
        type: "uint256[]",
      },
    ],
    name: "PubKeysPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlocks",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "hash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "builder",
            type: "address",
          },
        ],
        internalType: "struct IRollup.Block[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_blockBuilderRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedDepositId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProcessedWithdrawalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txTreeRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes16",
        name: "senderFlags",
        type: "bytes16",
      },
      {
        internalType: "bytes32[2]",
        name: "aggregatedPublicKey",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes32[4]",
        name: "aggregatedSignature",
        type: "bytes32[4]",
      },
      {
        internalType: "bytes32[4]",
        name: "messagePoint",
        type: "bytes32[4]",
      },
      {
        internalType: "bytes32",
        name: "publicKeysHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "senderAccountIds",
        type: "bytes",
      },
    ],
    name: "postNonRegistrationBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txTreeRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes16",
        name: "senderFlags",
        type: "bytes16",
      },
      {
        internalType: "bytes32[2]",
        name: "aggregatedPublicKey",
        type: "bytes32[2]",
      },
      {
        internalType: "bytes32[4]",
        name: "aggregatedSignature",
        type: "bytes32[4]",
      },
      {
        internalType: "bytes32[4]",
        name: "messagePoint",
        type: "bytes32[4]",
      },
      {
        internalType: "uint256[]",
        name: "senderPublicKeys",
        type: "uint256[]",
      },
    ],
    name: "postRegistrationBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "prevWithdrawalHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "nullifier",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
        ],
        internalType: "struct ChainedWithdrawalLib.ChainedWithdrawal[]",
        name: "withdrawals",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "lastWithdrawalHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "withdrawalAggregator",
            type: "address",
          },
        ],
        internalType:
          "struct WithdrawalProofPublicInputsLib.WithdrawalProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "postWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "postedBlockHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lastProcessedDepositId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "depositHashes",
        type: "bytes32[]",
      },
    ],
    name: "processDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayClaimableWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "relayDirectWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct IRollup.FraudProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitBlockFraudProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b5060805161508d61006d60003960008181612071015281816120c60152612281015261508d6000f3fe60806040526004361061011f5760003560e01c8063842f1bfc116100a0578063c7bffeeb11610064578063c7bffeeb1461037e578063e4f03798146103a7578063f03efa37146103be578063f2fde38b146103e7578063f8c8765e146104105761011f565b8063842f1bfc146102bd5780638da5cb5b146102e65780639b78813f14610311578063ad3cb1cc1461033c578063c57ca915146103675761011f565b80634f5b7dc2116100e75780634f5b7dc2146101fc57806352d1902d14610227578063567419c1146102525780636792f87a1461027d578063715018a6146102a65761011f565b80630cffc39c146101245780631f8f9c511461014d5780632dfdf0b51461018a5780633ae05047146101b55780634f1ef286146101e0575b600080fd5b34801561013057600080fd5b5061014b600480360381019061014691906133ae565b610439565b005b34801561015957600080fd5b50610174600480360381019061016f9190613444565b6108ad565b604051610181919061348a565b60405180910390f35b34801561019657600080fd5b5061019f6108c5565b6040516101ac919061348a565b60405180910390f35b3480156101c157600080fd5b506101ca6108cb565b6040516101d791906134b4565b60405180910390f35b6101fa60048036038101906101f5919061366e565b6108da565b005b34801561020857600080fd5b506102116108f9565b60405161021e91906137c6565b60405180910390f35b34801561023357600080fd5b5061023c6109b8565b60405161024991906134b4565b60405180910390f35b34801561025e57600080fd5b506102676109eb565b604051610274919061348a565b60405180910390f35b34801561028957600080fd5b506102a4600480360381019061029f919061385d565b6109f1565b005b3480156102b257600080fd5b506102bb610ed9565b005b3480156102c957600080fd5b506102e460048036038101906102df919061398e565b610eed565b005b3480156102f257600080fd5b506102fb611185565b6040516103089190613a63565b60405180910390f35b34801561031d57600080fd5b506103266111bd565b604051610333919061348a565b60405180910390f35b34801561034857600080fd5b506103516111c3565b60405161035e9190613afd565b60405180910390f35b34801561037357600080fd5b5061037c6111fc565b005b34801561038a57600080fd5b506103a560048036038101906103a09190613b75565b61143a565b005b3480156103b357600080fd5b506103bc6115e0565b005b3480156103ca57600080fd5b506103e560048036038101906103e09190613ca9565b611917565b005b3480156103f357600080fd5b5061040e60048036038101906104099190613d09565b611b44565b005b34801561041c57600080fd5b5061043760048036038101906104329190613d36565b611bca565b005b603083602001602081019061044e9190613dd9565b63ffffffff168154811061046557610464613e06565b5b906000526020600020906002020160000154836000013514610501578260000135603084602001602081019061049b9190613dd9565b63ffffffff16815481106104b2576104b1613e06565b5b9060005260206000209060020201600001546040517fa8722cd60000000000000000000000000000000000000000000000000000000081526004016104f8929190613e35565b60405180910390fd5b610509611e9a565b73ffffffffffffffffffffffffffffffffffffffff168360400160208101906105329190613d09565b73ffffffffffffffffffffffffffffffffffffffff161461057f576040517f9afe5bb700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603160008460200160208101906105969190613dd9565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff16156105f5576040517f94009bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a83836106566106518880360381019061064c9190613ec7565b611ea2565b611ee2565b6040518463ffffffff1660e01b815260040161067493929190613ff0565b602060405180830381865afa158015610691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b59190614061565b6106eb576040517f55d979c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001603160008560200160208101906107049190613dd9565b63ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000603084602001602081019061074c9190613dd9565b63ffffffff168154811061076357610762613e06565b5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050602c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663750d38cb826107de611e9a565b6040518363ffffffff1660e01b81526004016107fb92919061408e565b600060405180830381600087803b15801561081557600080fd5b505af1158015610829573d6000803e3d6000fd5b50505050610835611e9a565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff168560200160208101906108759190613dd9565b63ffffffff167fa2d160ed24716f0240546105d30a2e1efb2d5f23abb041888083bcc20083edd260405160405180910390a450505050565b60276020528060005260406000206000915090505481565b60205481565b60006108d5611f8d565b905090565b6108e261206f565b6108eb82612155565b6108f58282612160565b5050565b60606030805480602002602001604051908101604052809291908181526020016000905b828210156109af5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061091d565b50505050905090565b60006109c261227f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b602f5481565b610a5e83600001358686808060200260200160405190810160405280939291908181526020016000905b82821015610a4b57848483905060c00201803603810190610a3c9190614157565b81526020019060010190610a1b565b505050505061230690919063ffffffff16565b610a94576040517ffbf63aef00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a9c611e9a565b73ffffffffffffffffffffffffffffffffffffffff16836020016020810190610ac59190613d09565b73ffffffffffffffffffffffffffffffffffffffff1614610b12576040517fbe8e6d9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b602860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a8383610b73610b6e88803603810190610b6991906141d4565b612388565b611ee2565b6040518463ffffffff1660e01b8152600401610b9193929190613ff0565b602060405180830381865afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190614061565b610c08576040517f38a3efc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b85859050811015610ed1576000868683818110610c2b57610c2a613e06565b5b905060c00201803603810190610c419190614157565b90506000602760008360a0015181526020019081526020016000205403610ca3578060a001516040517f631b89b0000000000000000000000000000000000000000000000000000000008152600401610c9a91906134b4565b60405180910390fd5b60011515602460008360800151815260200190815260200160002060009054906101000a900460ff16151503610cd95750610ec4565b6001602460008360800151815260200190815260200160002060006101000a81548160ff02191690831515021790555060006040518060800160405280836020015173ffffffffffffffffffffffffffffffffffffffff168152602001836040015163ffffffff1681526020018360600151815260200183608001518152509050610d6782604001516123c2565b15610e5857602281908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548163ffffffff021916908363ffffffff160217905550604082015181600101556060820151816002015550507fd9106442c97b764fa4070229c5167ea28888d90803d276b9d3d6461296945cee81604051610e4b9190614265565b60405180910390a1610ec1565b6023610e63826123e5565b90806001815401808255809150506001900390600052602060002001600090919091909150557fb9a024ce5233e25c9dc00bd86bd8a44865c4e021660d4d11bf81ee1454324fa781604051610eb89190614265565b60405180910390a15b50505b8080600101915050610c0b565b505050505050565b610ee161242b565b610eeb60006124b2565b565b600082829050905060008103610f2f576040517f1dd6f83900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60056080610f3d91906142af565b811115610f76576040517f6771216a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600582610f859190614320565b14610fbc576040517f41adec0d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006030805490509050807f7e4f72212a0dbcb829e5fdaad6c3cb28556083f04fc687bfa2b2e40432bbb9358585604051610ff8929190614351565b60405180910390a260006005608061101091906142af565b67ffffffffffffffff81111561102957611028613543565b5b6040519080825280601f01601f19166020018201604052801561105b5781602001600182028036833780820191505090505b50905060005b838110156110d55785858281811061107c5761107b613e06565b5b9050013560f81c60f81b82828151811061109957611098613e06565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050611061565b5060008390505b600560806110ea91906142af565b81101561115857600160f81b826004836111049190614375565b8151811061111557611114613e06565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506005816111519190614375565b90506110dc565b5060008180519060200120905061117660008d8d8a858f8f8f612589565b50505050505050505050505050565b6000806111906127e5565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b602e5481565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600060238054905090506000606482116112165781611219565b60645b905060008167ffffffffffffffff81111561123757611236613543565b5b6040519080825280602002602001820160405280156112655781602001602082028036833780820191505090505b50905060005b828110156112f7576023600160238054905061128791906143a9565b8154811061129857611297613e06565b5b90600052602060002001548282815181106112b6576112b5613e06565b5b60200260200101818152505060238054806112d4576112d36143dd565b5b60019003818190600052602060002001600090559055808060010191505061126b565b50600063a6e2c3c060e01b8260405160240161131391906144bb565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050602960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f7b15776000602a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008560006113e2611e9a565b6040518763ffffffff1660e01b8152600401611402959493929190614566565b6000604051808303818588803b15801561141b57600080fd5b505af115801561142f573d6000803e3d6000fd5b505050505050505050565b60008282905090506000810361147c576040517ff54d9ddf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60808111156114b7576040517f07b556c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006030805490509050807f7a873ae11bb72d3848d5c34af1354cdd12aa5b30ec0d5187ec00ba5cefcd5c7f85856040516114f392919061462a565b60405180910390a2611503613285565b60005b838110156115515785858281811061152157611520613e06565b5b9050602002013582826080811061153b5761153a613e06565b5b6020020181815250508080600101915050611506565b5060008390505b608081101561158c57600182826080811061157657611575613e06565b5b6020020181815250508080600101915050611558565b506000816040516020016115a091906146f9565b60405160208183030381529060405280519060200120905060008060001b90506115d160018d8d85858f8f8f612589565b50505050505050505050505050565b600060228054905090506000601482116115fa57816115fd565b60145b905060008167ffffffffffffffff81111561161b5761161a613543565b5b60405190808252806020026020018201604052801561165457816020015b6116416132a8565b8152602001906001900390816116395790505b50905060005b828110156117d4576022600160228054905061167691906143a9565b8154811061168757611686613e06565b5b90600052602060002090600302016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820154815260200160028201548152505082828151811061174357611742613e06565b5b602002602001018190525060228054806117605761175f6143dd565b5b6001900381819060005260206000209060030201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549063ffffffff02191690556001820160009055600282016000905550509055808060010191505061165a565b50600063aafaed3a60e01b826040516024016117f09190614819565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050602960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f7b15776000602a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008560006118bf611e9a565b6040518763ffffffff1660e01b81526004016118df959493929190614566565b6000604051808303818588803b1580156118f857600080fd5b505af115801561190c573d6000803e3d6000fd5b505050505050505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611958611e9a565b73ffffffffffffffffffffffffffffffffffffffff16146119a5576040517fdbeadcfd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a369190614850565b73ffffffffffffffffffffffffffffffffffffffff16602d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611abc576040517faff663a500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b82829050811015611af957611aec838383818110611ae057611adf613e06565b5b9050602002013561280d565b8080600101915050611abf565b5082602f819055507f22ab6afd5caf53c894a7bb125d98ba16962ef2986041d88192b54e81ed84a103611b2a6108cb565b604051611b3791906134b4565b60405180910390a1505050565b611b4c61242b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611bbe5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611bb59190613a63565b60405180910390fd5b611bc7816124b2565b50565b6000611bd461291d565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015611c225750825b9050600060018367ffffffffffffffff16148015611c57575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611c65575080155b15611c9c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611cec5760018560000160086101000a81548160ff0219169083151502179055505b611cfc611cf7611e9a565b612945565b611d04612959565b611d0c612963565b611d14612975565b88603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087602b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086602d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085602c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611e33611e236108cb565b60306129ab90919063ffffffff16565b8315611e8f5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611e8691906148cc565b60405180910390a15b505050505050505050565b600033905090565b6000816000015182602001518360400151604051602001611ec593929190614986565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff811115611f0157611f00613543565b5b604051908082528060200260200182016040528015611f2f5781602001602082028036833780820191505090505b50905060005b6008811015611f8357602081611f4b91906142af565b84901b60e01c63ffffffff16828281518110611f6a57611f69613e06565b5b6020026020010181815250508080600101915050611f35565b5080915050919050565b6000806021549050600060205490506000602154905060005b6020811015612065576001808285901c16036120015760008160208110611fd057611fcf613e06565b5b015484604051602001611fe49291906149c3565b60405160208183030381529060405280519060200120935061202d565b83826040516020016120149291906149c3565b6040516020818303038152906040528051906020012093505b81826040516020016120409291906149c3565b6040516020818303038152906040528051906020012091508080600101915050611fa6565b5082935050505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061211c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612103612a6a565b73ffffffffffffffffffffffffffffffffffffffff1614155b15612153576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61215d61242b565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156121c857506040513d601f19601f820116820180604052508101906121c59190614a04565b60015b61220957816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016122009190613a63565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461227057806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161226791906134b4565b60405180910390fd5b61227a8383612ac1565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614612304576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000806000801b905060005b845181101561236a5760008582815181106123305761232f613e06565b5b60200260200101519050828160000151146123515760009350505050612382565b61235a81612b34565b9250508080600101915050612312565b5082811461237c576000915050612382565b60019150505b92915050565b6000816000015182602001516040516020016123a5929190614a31565b604051602081830303815290604052805190602001209050919050565b60006123de8263ffffffff166025612b8690919063ffffffff16565b9050919050565b6000816000015182602001518360400151846060015160405160200161240e9493929190614a7e565b604051602081830303815290604052805190602001209050919050565b612433611e9a565b73ffffffffffffffffffffffffffffffffffffffff16612451611185565b73ffffffffffffffffffffffffffffffffffffffff16146124b057612474611e9a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016124a79190613a63565b60405180910390fd5b565b60006124bc6127e5565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600080612597858585612ba0565b9050806125d0576040517f0f2512a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a6125de5760006125e1565b60015b60ff168a8a8a8a8a8a8a604051602001612602989796959493929190614b0d565b604051602081830303815290604052805190602001209050603080549050925060006126e46030805480602002602001604051908101604052809291908181526020016000905b828210156126db5783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190612649565b50505050612c97565b905060006126f06108cb565b905060006127138285612701611e9a565b6030612ccc909392919063ffffffff16565b90506000602760008381526020019081526020016000205414612762576040517f5ea7789800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856027600083815260200190815260200160002081905550612782611e9a565b73ffffffffffffffffffffffffffffffffffffffff16837fe27163b76905dc373b4ad854ddc9403bbac659c5f1c5191c39e5a7c44574040a8885886040516127cc93929190614b9f565b60405180910390a3505050505098975050505050505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60008190506001602060026128229190614d09565b61282c91906143a9565b60205410612866576040517fef5ccf6600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060206000815461287790614d54565b919050819055905060005b6020811015612907576001808284901c16036128ba5782600082602081106128ad576128ac613e06565b5b018190555050505061291a565b600081602081106128ce576128cd613e06565b5b0154836040516020016128e29291906149c3565b6040516020818303038152906040528051906020012092508080600101915050612882565b50600061291757612916614d9c565b5b50505b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b61294d612e4e565b61295681612e8e565b50565b612961612e4e565b565b61296b612e4e565b612973612f14565b565b6129a360405180606001604052806000801b8152602001600063ffffffff1681526020016000815250612f35565b602181905550565b8160405180604001604052806129ca6000801b856000801b6000612f75565b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000612a987f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612fae565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b612aca82612fb8565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115612b2757612b218282613085565b50612b30565b612b2f613109565b5b5050565b6000816000015182602001518360400151846060015185608001518660a00151604051602001612b6996959493929190614dcb565b604051602081830303815290604052805190602001209050919050565b6000612b98836000018360001b613146565b905092915050565b60008084836040518060400160405280600181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4581525086604051602001612bef9493929190614ebf565b6040516020818303038152906040529050612c086132ef565b60008083519050602083826020870160086107d05a03fa91508160008103612c2c57fe5b5081612c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6490614f59565b60405180910390fd5b600083600060018110612c8357612c82613e06565b5b602002015114159450505050509392505050565b60008160018351612ca891906143a9565b81518110612cb957612cb8613e06565b5b6020026020010151600001519050919050565b6000612d9c612d9086805480602002602001604051908101604052809291908181526020016000905b82821015612d875783829060005260206000209060020201604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190612cf5565b50505050612c97565b85858880549050612f75565b90508460405180604001604052808381526020018473ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050949350505050565b612e56613169565b612e8c576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b612e96612e4e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612f085760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401612eff9190613a63565b60405180910390fd5b612f11816124b2565b50565b612f1c612e4e565b6000612f26613189565b90506001816000018190555050565b6000816000015182602001518360400151604051602001612f5893929190614f79565b604051602081830303815290604052805190602001209050919050565b600084848484604051602001612f8e9493929190614fb6565b604051602081830303815290604052805190602001209050949350505050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361301457806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161300b9190613a63565b60405180910390fd5b806130417f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b612fae565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516130af9190615040565b600060405180830381855af49150503d80600081146130ea576040519150601f19603f3d011682016040523d82523d6000602084013e6130ef565b606091505b50915091506130ff8583836131b1565b9250505092915050565b6000341115613144576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600080836001016000848152602001908152602001600020541415905092915050565b600061317361291d565b60000160089054906101000a900460ff16905090565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b6060826131c6576131c182613240565b613238565b600082511480156131ee575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561323057836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016132279190613a63565b60405180910390fd5b819050613239565b5b9392505050565b6000815111156132535780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051806110000160405280608090602082028036833780820191505090505090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815260200160008152602001600080191681525090565b6040518060200160405280600190602082028036833780820191505090505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000606082840312156133405761333f613325565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261336e5761336d613349565b5b8235905067ffffffffffffffff81111561338b5761338a61334e565b5b6020830191508360018202830111156133a7576133a6613353565b5b9250929050565b6000806000608084860312156133c7576133c661331b565b5b60006133d58682870161332a565b935050606084013567ffffffffffffffff8111156133f6576133f5613320565b5b61340286828701613358565b92509250509250925092565b6000819050919050565b6134218161340e565b811461342c57600080fd5b50565b60008135905061343e81613418565b92915050565b60006020828403121561345a5761345961331b565b5b60006134688482850161342f565b91505092915050565b6000819050919050565b61348481613471565b82525050565b600060208201905061349f600083018461347b565b92915050565b6134ae8161340e565b82525050565b60006020820190506134c960008301846134a5565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006134fa826134cf565b9050919050565b61350a816134ef565b811461351557600080fd5b50565b60008135905061352781613501565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61357b82613532565b810181811067ffffffffffffffff8211171561359a57613599613543565b5b80604052505050565b60006135ad613311565b90506135b98282613572565b919050565b600067ffffffffffffffff8211156135d9576135d8613543565b5b6135e282613532565b9050602081019050919050565b82818337600083830152505050565b600061361161360c846135be565b6135a3565b90508281526020810184848401111561362d5761362c61352d565b5b6136388482856135ef565b509392505050565b600082601f83011261365557613654613349565b5b81356136658482602086016135fe565b91505092915050565b600080604083850312156136855761368461331b565b5b600061369385828601613518565b925050602083013567ffffffffffffffff8111156136b4576136b3613320565b5b6136c085828601613640565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6136ff8161340e565b82525050565b61370e816134ef565b82525050565b60408201600082015161372a60008501826136f6565b50602082015161373d6020850182613705565b50505050565b600061374f8383613714565b60408301905092915050565b6000602082019050919050565b6000613773826136ca565b61377d81856136d5565b9350613788836136e6565b8060005b838110156137b95781516137a08882613743565b97506137ab8361375b565b92505060018101905061378c565b5085935050505092915050565b600060208201905081810360008301526137e08184613768565b905092915050565b60008083601f8401126137fe576137fd613349565b5b8235905067ffffffffffffffff81111561381b5761381a61334e565b5b6020830191508360c082028301111561383757613836613353565b5b9250929050565b60006040828403121561385457613853613325565b5b81905092915050565b6000806000806000608086880312156138795761387861331b565b5b600086013567ffffffffffffffff81111561389757613896613320565b5b6138a3888289016137e8565b955095505060206138b68882890161383e565b935050606086013567ffffffffffffffff8111156138d7576138d6613320565b5b6138e388828901613358565b92509250509295509295909350565b60007fffffffffffffffffffffffffffffffff0000000000000000000000000000000082169050919050565b613927816138f2565b811461393257600080fd5b50565b6000813590506139448161391e565b92915050565b60008190508260206002028201111561396657613965613353565b5b92915050565b60008190508260206004028201111561398857613987613353565b5b92915050565b6000806000806000806000806101c0898b0312156139af576139ae61331b565b5b60006139bd8b828c0161342f565b98505060206139ce8b828c01613935565b97505060406139df8b828c0161394a565b96505060806139f08b828c0161396c565b955050610100613a028b828c0161396c565b945050610180613a148b828c0161342f565b9350506101a089013567ffffffffffffffff811115613a3657613a35613320565b5b613a428b828c01613358565b92509250509295985092959890939650565b613a5d816134ef565b82525050565b6000602082019050613a786000830184613a54565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613ab8578082015181840152602081019050613a9d565b60008484015250505050565b6000613acf82613a7e565b613ad98185613a89565b9350613ae9818560208601613a9a565b613af281613532565b840191505092915050565b60006020820190508181036000830152613b178184613ac4565b905092915050565b60008083601f840112613b3557613b34613349565b5b8235905067ffffffffffffffff811115613b5257613b5161334e565b5b602083019150836020820283011115613b6e57613b6d613353565b5b9250929050565b60008060008060008060006101a0888a031215613b9557613b9461331b565b5b6000613ba38a828b0161342f565b9750506020613bb48a828b01613935565b9650506040613bc58a828b0161394a565b9550506080613bd68a828b0161396c565b945050610100613be88a828b0161396c565b93505061018088013567ffffffffffffffff811115613c0a57613c09613320565b5b613c168a828b01613b1f565b925092505092959891949750929550565b613c3081613471565b8114613c3b57600080fd5b50565b600081359050613c4d81613c27565b92915050565b60008083601f840112613c6957613c68613349565b5b8235905067ffffffffffffffff811115613c8657613c8561334e565b5b602083019150836020820283011115613ca257613ca1613353565b5b9250929050565b600080600060408486031215613cc257613cc161331b565b5b6000613cd086828701613c3e565b935050602084013567ffffffffffffffff811115613cf157613cf0613320565b5b613cfd86828701613c53565b92509250509250925092565b600060208284031215613d1f57613d1e61331b565b5b6000613d2d84828501613518565b91505092915050565b60008060008060808587031215613d5057613d4f61331b565b5b6000613d5e87828801613518565b9450506020613d6f87828801613518565b9350506040613d8087828801613518565b9250506060613d9187828801613518565b91505092959194509250565b600063ffffffff82169050919050565b613db681613d9d565b8114613dc157600080fd5b50565b600081359050613dd381613dad565b92915050565b600060208284031215613def57613dee61331b565b5b6000613dfd84828501613dc4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050613e4a60008301856134a5565b613e5760208301846134a5565b9392505050565b600080fd5b600060608284031215613e7957613e78613e5e565b5b613e8360606135a3565b90506000613e938482850161342f565b6000830152506020613ea784828501613dc4565b6020830152506040613ebb84828501613518565b60408301525092915050565b600060608284031215613edd57613edc61331b565b5b6000613eeb84828501613e63565b91505092915050565b600082825260208201905092915050565b6000613f118385613ef4565b9350613f1e8385846135ef565b613f2783613532565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b613f6781613471565b82525050565b6000613f798383613f5e565b60208301905092915050565b6000602082019050919050565b6000613f9d82613f32565b613fa78185613f3d565b9350613fb283613f4e565b8060005b83811015613fe3578151613fca8882613f6d565b9750613fd583613f85565b925050600181019050613fb6565b5085935050505092915050565b6000604082019050818103600083015261400b818587613f05565b9050818103602083015261401f8184613f92565b9050949350505050565b60008115159050919050565b61403e81614029565b811461404957600080fd5b50565b60008151905061405b81614035565b92915050565b6000602082840312156140775761407661331b565b5b60006140858482850161404c565b91505092915050565b60006040820190506140a36000830185613a54565b6140b06020830184613a54565b9392505050565b600060c082840312156140cd576140cc613e5e565b5b6140d760c06135a3565b905060006140e78482850161342f565b60008301525060206140fb84828501613518565b602083015250604061410f84828501613dc4565b604083015250606061412384828501613c3e565b60608301525060806141378482850161342f565b60808301525060a061414b8482850161342f565b60a08301525092915050565b600060c0828403121561416d5761416c61331b565b5b600061417b848285016140b7565b91505092915050565b60006040828403121561419a57614199613e5e565b5b6141a460406135a3565b905060006141b48482850161342f565b60008301525060206141c884828501613518565b60208301525092915050565b6000604082840312156141ea576141e961331b565b5b60006141f884828501614184565b91505092915050565b61420a81613d9d565b82525050565b6080820160008201516142266000850182613705565b5060208201516142396020850182614201565b50604082015161424c6040850182613f5e565b50606082015161425f60608501826136f6565b50505050565b600060808201905061427a6000830184614210565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006142ba82613471565b91506142c583613471565b92508282026142d381613471565b915082820484148315176142ea576142e9614280565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061432b82613471565b915061433683613471565b925082614346576143456142f1565b5b828206905092915050565b6000602082019050818103600083015261436c818486613f05565b90509392505050565b600061438082613471565b915061438b83613471565b92508282019050808211156143a3576143a2614280565b5b92915050565b60006143b482613471565b91506143bf83613471565b92508282039050818111156143d7576143d6614280565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061444483836136f6565b60208301905092915050565b6000602082019050919050565b60006144688261440c565b6144728185614417565b935061447d83614428565b8060005b838110156144ae5781516144958882614438565b97506144a083614450565b925050600181019050614481565b5085935050505092915050565b600060208201905081810360008301526144d5818461445d565b905092915050565b6000819050919050565b6000819050919050565b600061450c614507614502846144dd565b6144e7565b613471565b9050919050565b61451c816144f1565b82525050565b600081519050919050565b600061453882614522565b6145428185613ef4565b9350614552818560208601613a9a565b61455b81613532565b840191505092915050565b600060a08201905061457b6000830188613a54565b6145886020830187614513565b818103604083015261459a818661452d565b90506145a96060830185614513565b6145b66080830184613a54565b9695505050505050565b600080fd5b82818337505050565b60006145da8385613f3d565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561460d5761460c6145c0565b5b60208302925061461e8385846145c5565b82840190509392505050565b600060208201905081810360008301526146458184866145ce565b90509392505050565b600060809050919050565b600081905092915050565b6000819050919050565b61467781613471565b82525050565b6000614689838361466e565b60208301905092915050565b6000602082019050919050565b6146ab8161464e565b6146b58184614659565b92506146c082614664565b8060005b838110156146f15781516146d8878261467d565b96506146e383614695565b9250506001810190506146c4565b505050505050565b600061470582846146a2565b6110008201915081905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6080820160008201516147576000850182613705565b50602082015161476a6020850182614201565b50604082015161477d6040850182613f5e565b50606082015161479060608501826136f6565b50505050565b60006147a28383614741565b60808301905092915050565b6000602082019050919050565b60006147c682614715565b6147d08185614720565b93506147db83614731565b8060005b8381101561480c5781516147f38882614796565b97506147fe836147ae565b9250506001810190506147df565b5085935050505092915050565b6000602082019050818103600083015261483381846147bb565b905092915050565b60008151905061484a81613501565b92915050565b6000602082840312156148665761486561331b565b5b60006148748482850161483b565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b60006148b66148b16148ac8461487d565b6144e7565b614887565b9050919050565b6148c68161489b565b82525050565b60006020820190506148e160008301846148bd565b92915050565b6000819050919050565b6149026148fd8261340e565b6148e7565b82525050565b60008160e01b9050919050565b600061492082614908565b9050919050565b61493861493382613d9d565b614915565b82525050565b60008160601b9050919050565b60006149568261493e565b9050919050565b60006149688261494b565b9050919050565b61498061497b826134ef565b61495d565b82525050565b600061499282866148f1565b6020820191506149a28285614927565b6004820191506149b2828461496f565b601482019150819050949350505050565b60006149cf82856148f1565b6020820191506149df82846148f1565b6020820191508190509392505050565b6000815190506149fe81613418565b92915050565b600060208284031215614a1a57614a1961331b565b5b6000614a28848285016149ef565b91505092915050565b6000614a3d82856148f1565b602082019150614a4d828461496f565b6014820191508190509392505050565b6000819050919050565b614a78614a7382613471565b614a5d565b82525050565b6000614a8a828761496f565b601482019150614a9a8286614927565b600482019150614aaa8285614a67565b602082019150614aba82846148f1565b60208201915081905095945050505050565b6000819050919050565b614ae7614ae2826138f2565b614acc565b82525050565b614af9604083836145c5565b5050565b614b09608083836145c5565b5050565b6000614b19828b614927565b600482019150614b29828a6148f1565b602082019150614b398289614ad6565b601082019150614b4982886148f1565b602082019150614b5982876148f1565b602082019150614b698286614aed565b604082019150614b798285614afd565b608082019150614b898284614afd565b6080820191508190509998505050505050505050565b6000606082019050614bb4600083018661347b565b614bc160208301856134a5565b614bce60408301846134a5565b949350505050565b60008160011c9050919050565b6000808291508390505b6001851115614c2d57808604811115614c0957614c08614280565b5b6001851615614c185780820291505b8081029050614c2685614bd6565b9450614bed565b94509492505050565b600082614c465760019050614d02565b81614c545760009050614d02565b8160018114614c6a5760028114614c7457614ca3565b6001915050614d02565b60ff841115614c8657614c85614280565b5b8360020a915084821115614c9d57614c9c614280565b5b50614d02565b5060208310610133831016604e8410600b8410161715614cd85782820a905083811115614cd357614cd2614280565b5b614d02565b614ce58484846001614be3565b92509050818404811115614cfc57614cfb614280565b5b81810290505b9392505050565b6000614d1482613471565b9150614d1f83613471565b9250614d4c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484614c36565b905092915050565b6000614d5f82613471565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614d9157614d90614280565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000614dd782896148f1565b602082019150614de7828861496f565b601482019150614df78287614927565b600482019150614e078286614a67565b602082019150614e1782856148f1565b602082019150614e2782846148f1565b602082019150819050979650505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b614e7181614e3b565b614e7b8184614e46565b9250614e8682614e51565b8060005b83811015614eb7578151614e9e878261467d565b9650614ea983614e5b565b925050600181019050614e8a565b505050505050565b6000614ecb8287614aed565b604082019150614edb8286614afd565b608082019150614eeb8285614e68565b604082019150614efb8284614afd565b60808201915081905095945050505050565b7f50616972696e674f70436f64654661696c656400000000000000000000000000600082015250565b6000614f43601383613a89565b9150614f4e82614f0d565b602082019050919050565b60006020820190508181036000830152614f7281614f36565b9050919050565b6000614f8582866148f1565b602082019150614f958285614927565b600482019150614fa58284614a67565b602082019150819050949350505050565b6000614fc282876148f1565b602082019150614fd282866148f1565b602082019150614fe282856148f1565b602082019150614ff28284614927565b60048201915081905095945050505050565b600081905092915050565b600061501a82614522565b6150248185615004565b9350615034818560208601613a9a565b80840191505092915050565b600061504c828461500f565b91508190509291505056fea2646970667358221220dc87420b0c0f2e887ce2754dd4ce5e955e1172b1d02a0809c941e410a7d061d964736f6c63430008180033";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Rollup & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Rollup__factory {
    return super.connect(runner) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new Interface(_abi) as RollupInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Rollup {
    return new Contract(address, _abi, runner) as unknown as Rollup;
  }
}
