/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Rollup, RollupInterface } from "../../../contracts/rollup/Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofAlreadySubmitted",
    type: "error",
  },
  {
    inputs: [],
    name: "FraudProofVerificationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBlockBuilder",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawalProofVerificationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "BlockFraudProofSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "prevBlockHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "BlockPosted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "depositTreeRoot",
        type: "bytes32",
      },
    ],
    name: "DepositsProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "withdrawalRequest",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawalAggregator",
        type: "address",
      },
    ],
    name: "WithdrawRequested",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositTreeRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedDepositId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastProcessedWithdrawalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_scrollMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "_blockBuilderRegistry",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "isRegistrationBlock",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "txTreeRoot",
        type: "bytes32",
      },
      {
        internalType: "uint128",
        name: "senderFlags",
        type: "uint128",
      },
      {
        internalType: "bytes32",
        name: "publicKeysHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "accountIdsHash",
        type: "bytes32",
      },
      {
        internalType: "uint256[2]",
        name: "aggregatedPublicKey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[4]",
        name: "aggregatedSignature",
        type: "uint256[4]",
      },
      {
        internalType: "uint256[4]",
        name: "messagePoint",
        type: "uint256[4]",
      },
    ],
    name: "postBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "tokenIndex",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "salt",
            type: "bytes32",
          },
        ],
        internalType: "struct IRollup.Withdrawal[]",
        name: "_withdrawalRequests",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "withdrawalTreeRoot",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "withdrawalAggregator",
            type: "address",
          },
        ],
        internalType: "struct IRollup.WithdrawalProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "postWithdrawalRequests",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedDepositId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "depositHashes",
        type: "bytes32[]",
      },
    ],
    name: "processDeposits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint32",
            name: "blockNumber",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "blockBuilder",
            type: "address",
          },
          {
            internalType: "address",
            name: "challenger",
            type: "address",
          },
        ],
        internalType: "struct IRollup.FraudProofPublicInputs",
        name: "publicInputs",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitBlockFraudProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lastProcessedWithdrawId",
        type: "uint256",
      },
    ],
    name: "submitWithdrawals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051612bd761006d60003960008181610fca0152818161101f01526111da0152612bd76000f3fe6080604052600436106100f35760003560e01c8063d2b210a11161008a578063eeedfc0511610059578063eeedfc05146102f7578063f03efa3714610322578063f2fde38b1461034b578063f8c8765e14610374576100f3565b8063d2b210a11461023d578063d6e4602d1461027a578063dd4d4e89146102a3578063eb8d5d23146102ce576100f3565b8063715018a6116100c6578063715018a6146101a757806379072407146101be5780638da5cb5b146101e7578063ad3cb1cc14610212576100f3565b8063048de2f6146100f857806348253b7a146101235780634f1ef2861461016057806352d1902d1461017c575b600080fd5b34801561010457600080fd5b5061010d61039d565b60405161011a9190611a38565b60405180910390f35b34801561012f57600080fd5b5061014a60048036038101906101459190611b5c565b6103a7565b6040516101579190611c2c565b60405180910390f35b61017a60048036038101906101759190611deb565b6105a8565b005b34801561018857600080fd5b506101916105c7565b60405161019e9190611a38565b60405180910390f35b3480156101b357600080fd5b506101bc6105fa565b005b3480156101ca57600080fd5b506101e560048036038101906101e09190611f1c565b61060e565b005b3480156101f357600080fd5b506101fc6107c9565b6040516102099190611fc0565b60405180910390f35b34801561021e57600080fd5b50610227610801565b604051610234919061205a565b60405180910390f35b34801561024957600080fd5b50610264600480360381019061025f91906120b8565b61083a565b6040516102719190611a38565b60405180910390f35b34801561028657600080fd5b506102a1600480360381019061029c9190612111565b610868565b005b3480156102af57600080fd5b506102b8610872565b6040516102c59190611c2c565b60405180910390f35b3480156102da57600080fd5b506102f560048036038101906102f0919061215d565b61087c565b005b34801561030357600080fd5b5061030c610b6b565b6040516103199190611c2c565b60405180910390f35b34801561032e57600080fd5b5061034960048036038101906103449190612213565b610b75565b005b34801561035757600080fd5b50610372600480360381019061036d9190612273565b610bc8565b005b34801561038057600080fd5b5061039b600480360381019061039691906122a0565b610c4e565b005b6000600554905090565b6000801515600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a5387a86103f2610efc565b6040518263ffffffff1660e01b815260040161040e9190611fc0565b602060405180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f919061231c565b151503610488576040517f23d4a24e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600089898989898989896040516020016104a9989796959493929190612411565b60405160208183030381529060405280519060200120905060048054905091506000610524600480548060200260200160405190810160405280929190818152602001828054801561051a57602002820191906000526020600020905b815481526020019060010190808311610506575b5050505050610f04565b905061053e600554836004610f359092919063ffffffff16565b610546610efc565b73ffffffffffffffffffffffffffffffffffffffff16817fe27163b76905dc373b4ad854ddc9403bbac659c5f1c5191c39e5a7c44574040a8560055486604051610592939291906124a3565b60405180910390a3505098975050505050505050565b6105b0610fc8565b6105b9826110ae565b6105c382826110b9565b5050565b60006105d16111d8565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b61060261125f565b61060c60006112e6565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a838361066f61066a88803603810190610665919061252f565b6113bd565b6113f7565b6040518463ffffffff1660e01b815260040161068d93929190612658565b602060405180830381865afa1580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce919061231c565b610704576040517f38a3efc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008360000135905060005b8686905081101561078157600661074e88888481811061073357610732612691565b5b9050608002018036038101906107499190612738565b6114a2565b90806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050610710565b50807f0e3e90af4fd393b8486d674b4f90f884aea927619dbfb8458b4a732d9f7694f06107ac610efc565b6040516107b99190611fc0565b60405180910390a2505050505050565b6000806107d46114e8565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b600060048263ffffffff168154811061085657610855612691565b5b90600052602060002001549050919050565b8060088190555050565b6000600954905090565b600a600084602001602081019061089391906120b8565b63ffffffff1663ffffffff16815260200190815260200160002060009054906101000a900460ff16156108f2576040517f94009bff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e4f7a8a838361095361094e8880360381019061094991906127dd565b611510565b6113f7565b6040518463ffffffff1660e01b815260040161097193929190612658565b602060405180830381865afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b2919061231c565b6109e8576040517f55d979c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600a6000856020016020810190610a0191906120b8565b63ffffffff1663ffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663750d38cb846040016020810190610a839190612273565b610a8b610efc565b6040518363ffffffff1660e01b8152600401610aa892919061280a565b600060405180830381600087803b158015610ac257600080fd5b505af1158015610ad6573d6000803e3d6000fd5b50505050610ae2610efc565b73ffffffffffffffffffffffffffffffffffffffff16836040016020810190610b0b9190612273565b73ffffffffffffffffffffffffffffffffffffffff16846020016020810190610b3491906120b8565b63ffffffff167fa2d160ed24716f0240546105d30a2e1efb2d5f23abb041888083bcc20083edd260405160405180910390a4505050565b6000600854905090565b60008060001b905080600581905550836009819055507f22ab6afd5caf53c894a7bb125d98ba16962ef2986041d88192b54e81ed84a10381604051610bba9190611a38565b60405180910390a150505050565b610bd061125f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c425760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c399190611fc0565b60405180910390fd5b610c4b816112e6565b50565b6000610c58611556565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610ca65750825b9050600060018367ffffffffffffffff16148015610cdb575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610ce9575080155b15610d20576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610d705760018560000160086101000a81548160ff0219169083151502179055505b610d80610d7b610efc565b61157e565b610d88611592565b886000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e95600461159c565b8315610ef15760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610ee8919061288c565b60405180910390a15b505050505050505050565b600033905090565b60008160018351610f1591906128d6565b81518110610f2657610f25612691565b5b60200260200101519050919050565b82610f9d610f9185805480602002602001604051908101604052809291908181526020018280548015610f8757602002820191906000526020600020905b815481526020019060010190808311610f73575b5050505050610f04565b848487805490506115ca565b9080600181540180825580915050600190039060005260206000200160009091909190915055505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061107557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661105c611603565b73ffffffffffffffffffffffffffffffffffffffff1614155b156110ac576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6110b661125f565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561112157506040513d601f19601f8201168201806040525081019061111e919061291f565b60015b61116257816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016111599190611fc0565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b81146111c957806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016111c09190611a38565b60405180910390fd5b6111d3838361165a565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461125d576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611267610efc565b73ffffffffffffffffffffffffffffffffffffffff166112856107c9565b73ffffffffffffffffffffffffffffffffffffffff16146112e4576112a8610efc565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112db9190611fc0565b60405180910390fd5b565b60006112f06114e8565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000816000015182602001516040516020016113da929190612994565b604051602081830303815290604052805190602001209050919050565b60606000600867ffffffffffffffff81111561141657611415611cc0565b5b6040519080825280602002602001820160405280156114445781602001602082028036833780820191505090505b50905060005b60088110156114985760208161146091906129c0565b84901b60e01c63ffffffff1682828151811061147f5761147e612691565b5b602002602001018181525050808060010191505061144a565b5080915050919050565b600081600001518260200151836040015184606001516040516020016114cb9493929190612a59565b604051602081830303815290604052805190602001209050919050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600081600001518260200151836040015184606001516040516020016115399493929190612aa7565b604051602081830303815290604052805190602001209050919050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6115866116cd565b61158f8161170d565b50565b61159a6116cd565b565b806000801b908060018154018082558091505060019003906000526020600020016000909190919091505550565b6000848484846040516020016115e39493929190612af5565b604051602081830303815290604052805190602001209050949350505050565b60006116317f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611793565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6116638261179d565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156116c0576116ba828261186a565b506116c9565b6116c86118ee565b5b5050565b6116d561192b565b61170b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117156116cd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036117875760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161177e9190611fc0565b60405180910390fd5b611790816112e6565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036117f957806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016117f09190611fc0565b60405180910390fd5b806118267f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611793565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516118949190612b8a565b600060405180830381855af49150503d80600081146118cf576040519150601f19603f3d011682016040523d82523d6000602084013e6118d4565b606091505b50915091506118e485838361194b565b9250505092915050565b6000341115611929576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611935611556565b60000160089054906101000a900460ff16905090565b6060826119605761195b826119da565b6119d2565b60008251148015611988575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156119ca57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016119c19190611fc0565b60405180910390fd5b8190506119d3565b5b9392505050565b6000815111156119ed5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b611a3281611a1f565b82525050565b6000602082019050611a4d6000830184611a29565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b611a7c81611a67565b8114611a8757600080fd5b50565b600081359050611a9981611a73565b92915050565b611aa881611a1f565b8114611ab357600080fd5b50565b600081359050611ac581611a9f565b92915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611af081611acb565b8114611afb57600080fd5b50565b600081359050611b0d81611ae7565b92915050565b600080fd5b600081905082602060020282011115611b3457611b33611b13565b5b92915050565b600081905082602060040282011115611b5657611b55611b13565b5b92915050565b6000806000806000806000806101e0898b031215611b7d57611b7c611a5d565b5b6000611b8b8b828c01611a8a565b9850506020611b9c8b828c01611ab6565b9750506040611bad8b828c01611afe565b9650506060611bbe8b828c01611ab6565b9550506080611bcf8b828c01611ab6565b94505060a0611be08b828c01611b18565b93505060e0611bf18b828c01611b3a565b925050610160611c038b828c01611b3a565b9150509295985092959890939650565b6000819050919050565b611c2681611c13565b82525050565b6000602082019050611c416000830184611c1d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c7282611c47565b9050919050565b611c8281611c67565b8114611c8d57600080fd5b50565b600081359050611c9f81611c79565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611cf882611caf565b810181811067ffffffffffffffff82111715611d1757611d16611cc0565b5b80604052505050565b6000611d2a611a53565b9050611d368282611cef565b919050565b600067ffffffffffffffff821115611d5657611d55611cc0565b5b611d5f82611caf565b9050602081019050919050565b82818337600083830152505050565b6000611d8e611d8984611d3b565b611d20565b905082815260208101848484011115611daa57611da9611caa565b5b611db5848285611d6c565b509392505050565b600082601f830112611dd257611dd1611ca5565b5b8135611de2848260208601611d7b565b91505092915050565b60008060408385031215611e0257611e01611a5d565b5b6000611e1085828601611c90565b925050602083013567ffffffffffffffff811115611e3157611e30611a62565b5b611e3d85828601611dbd565b9150509250929050565b600080fd5b60008083601f840112611e6257611e61611ca5565b5b8235905067ffffffffffffffff811115611e7f57611e7e611e47565b5b602083019150836080820283011115611e9b57611e9a611b13565b5b9250929050565b600080fd5b600060408284031215611ebd57611ebc611ea2565b5b81905092915050565b60008083601f840112611edc57611edb611ca5565b5b8235905067ffffffffffffffff811115611ef957611ef8611e47565b5b602083019150836001820283011115611f1557611f14611b13565b5b9250929050565b600080600080600060808688031215611f3857611f37611a5d565b5b600086013567ffffffffffffffff811115611f5657611f55611a62565b5b611f6288828901611e4c565b95509550506020611f7588828901611ea7565b935050606086013567ffffffffffffffff811115611f9657611f95611a62565b5b611fa288828901611ec6565b92509250509295509295909350565b611fba81611c67565b82525050565b6000602082019050611fd56000830184611fb1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612015578082015181840152602081019050611ffa565b60008484015250505050565b600061202c82611fdb565b6120368185611fe6565b9350612046818560208601611ff7565b61204f81611caf565b840191505092915050565b600060208201905081810360008301526120748184612021565b905092915050565b600063ffffffff82169050919050565b6120958161207c565b81146120a057600080fd5b50565b6000813590506120b28161208c565b92915050565b6000602082840312156120ce576120cd611a5d565b5b60006120dc848285016120a3565b91505092915050565b6120ee81611c13565b81146120f957600080fd5b50565b60008135905061210b816120e5565b92915050565b60006020828403121561212757612126611a5d565b5b6000612135848285016120fc565b91505092915050565b60006080828403121561215457612153611ea2565b5b81905092915050565b600080600060a0848603121561217657612175611a5d565b5b60006121848682870161213e565b935050608084013567ffffffffffffffff8111156121a5576121a4611a62565b5b6121b186828701611ec6565b92509250509250925092565b60008083601f8401126121d3576121d2611ca5565b5b8235905067ffffffffffffffff8111156121f0576121ef611e47565b5b60208301915083602082028301111561220c5761220b611b13565b5b9250929050565b60008060006040848603121561222c5761222b611a5d565b5b600061223a868287016120fc565b935050602084013567ffffffffffffffff81111561225b5761225a611a62565b5b612267868287016121bd565b92509250509250925092565b60006020828403121561228957612288611a5d565b5b600061229784828501611c90565b91505092915050565b600080600080608085870312156122ba576122b9611a5d565b5b60006122c887828801611c90565b94505060206122d987828801611c90565b93505060406122ea87828801611c90565b92505060606122fb87828801611c90565b91505092959194509250565b60008151905061231681611a73565b92915050565b60006020828403121561233257612331611a5d565b5b600061234084828501612307565b91505092915050565b60008160f81b9050919050565b600061236182612349565b9050919050565b600061237382612356565b9050919050565b61238b61238682611a67565b612368565b82525050565b6000819050919050565b6123ac6123a782611a1f565b612391565b82525050565b60008160801b9050919050565b60006123ca826123b2565b9050919050565b6123e26123dd82611acb565b6123bf565b82525050565b82818337505050565b6123fd604083836123e8565b5050565b61240d608083836123e8565b5050565b600061241d828b61237a565b60018201915061242d828a61239b565b60208201915061243d82896123d1565b60108201915061244d828861239b565b60208201915061245d828761239b565b60208201915061246d82866123f1565b60408201915061247d8285612401565b60808201915061248d8284612401565b6080820191508190509998505050505050505050565b60006060820190506124b86000830186611c1d565b6124c56020830185611a29565b6124d26040830184611a29565b949350505050565b600080fd5b6000604082840312156124f5576124f46124da565b5b6124ff6040611d20565b9050600061250f84828501611ab6565b600083015250602061252384828501611c90565b60208301525092915050565b60006040828403121561254557612544611a5d565b5b6000612553848285016124df565b91505092915050565b600082825260208201905092915050565b6000612579838561255c565b9350612586838584611d6c565b61258f83611caf565b840190509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6125cf81611c13565b82525050565b60006125e183836125c6565b60208301905092915050565b6000602082019050919050565b60006126058261259a565b61260f81856125a5565b935061261a836125b6565b8060005b8381101561264b57815161263288826125d5565b975061263d836125ed565b92505060018101905061261e565b5085935050505092915050565b6000604082019050818103600083015261267381858761256d565b9050818103602083015261268781846125fa565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000608082840312156126d6576126d56124da565b5b6126e06080611d20565b905060006126f084828501611c90565b6000830152506020612704848285016120a3565b6020830152506040612718848285016120fc565b604083015250606061272c84828501611ab6565b60608301525092915050565b60006080828403121561274e5761274d611a5d565b5b600061275c848285016126c0565b91505092915050565b60006080828403121561277b5761277a6124da565b5b6127856080611d20565b9050600061279584828501611ab6565b60008301525060206127a9848285016120a3565b60208301525060406127bd84828501611c90565b60408301525060606127d184828501611c90565b60608301525092915050565b6000608082840312156127f3576127f2611a5d565b5b600061280184828501612765565b91505092915050565b600060408201905061281f6000830185611fb1565b61282c6020830184611fb1565b9392505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061287661287161286c84612833565b612851565b61283d565b9050919050565b6128868161285b565b82525050565b60006020820190506128a1600083018461287d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128e182611c13565b91506128ec83611c13565b9250828203905081811115612904576129036128a7565b5b92915050565b60008151905061291981611a9f565b92915050565b60006020828403121561293557612934611a5d565b5b60006129438482850161290a565b91505092915050565b60008160601b9050919050565b60006129648261294c565b9050919050565b600061297682612959565b9050919050565b61298e61298982611c67565b61296b565b82525050565b60006129a0828561239b565b6020820191506129b0828461297d565b6014820191508190509392505050565b60006129cb82611c13565b91506129d683611c13565b92508282026129e481611c13565b915082820484148315176129fb576129fa6128a7565b5b5092915050565b60008160e01b9050919050565b6000612a1a82612a02565b9050919050565b612a32612a2d8261207c565b612a0f565b82525050565b6000819050919050565b612a53612a4e82611c13565b612a38565b82525050565b6000612a65828761297d565b601482019150612a758286612a21565b600482019150612a858285612a42565b602082019150612a95828461239b565b60208201915081905095945050505050565b6000612ab3828761239b565b602082019150612ac38286612a21565b600482019150612ad3828561297d565b601482019150612ae3828461297d565b60148201915081905095945050505050565b6000612b01828761239b565b602082019150612b11828661239b565b602082019150612b21828561239b565b602082019150612b318284612a42565b60208201915081905095945050505050565b600081519050919050565b600081905092915050565b6000612b6482612b43565b612b6e8185612b4e565b9350612b7e818560208601611ff7565b80840191505092915050565b6000612b968284612b59565b91508190509291505056fea26469706673582212205ba9ebbea58d4a71c317884da6cd06f6c4c779f8b312f1b8e922e16ac89e9b0564736f6c63430008180033";

type RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup__factory extends ContractFactory {
  constructor(...args: RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Rollup & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Rollup__factory {
    return super.connect(runner) as Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupInterface {
    return new Interface(_abi) as RollupInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Rollup {
    return new Contract(address, _abi, runner) as unknown as Rollup;
  }
}
