/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BlockBuilderRegistry,
  BlockBuilderRegistryInterface,
} from "../../../contracts/block-builder-registry/BlockBuilderRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "BlockBuilderNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotUnstakeWithinChallengeDuration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientStakeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyRollupContract",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "BlockBuilderSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
    ],
    name: "BlockBuilderStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
    ],
    name: "BlockBuilderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blockBuilders",
    outputs: [
      {
        internalType: "string",
        name: "blockBuilderUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "stakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stopTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numSlashes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rollup",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
    ],
    name: "isValidBlockBuilder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_burnAddress",
        type: "address",
      },
    ],
    name: "setBurnAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "blockBuilder",
        type: "address",
      },
      {
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "slashBlockBuilder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopBlockBuilder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "updateBlockBuilder",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051612a7b61006d600039600081816117a0015281816117f501526119b00152612a7b6000f3fe6080604052600436106100dd5760003560e01c80636a5387a81161007f5780638da5cb5b116100595780638da5cb5b1461025a578063ad3cb1cc14610285578063c4d66de8146102b0578063f2fde38b146102d9576100dd565b80636a5387a8146101dd578063715018a61461021a578063750d38cb14610231576100dd565b80634f1ef286116100bb5780634f1ef2861461013e578063513348511461015a57806352d1902d1461017157806363cebe621461019c576100dd565b80630f36c638146100e25780632def6620146100fe5780634b0e721614610115575b600080fd5b6100fc60048036038101906100f79190612166565b610302565b005b34801561010a57600080fd5b506101136105a1565b005b34801561012157600080fd5b5061013c6004803603810190610137919061220d565b6109a9565b005b610158600480360381019061015391906122db565b6109f5565b005b34801561016657600080fd5b5061016f610a14565b005b34801561017d57600080fd5b50610186610d9b565b6040516101939190612350565b60405180910390f35b3480156101a857600080fd5b506101c360048036038101906101be919061220d565b610dce565b6040516101d495949392919061241e565b60405180910390f35b3480156101e957600080fd5b5061020460048036038101906101ff919061220d565b610e99565b6040516102119190612478565b60405180910390f35b34801561022657600080fd5b5061022f610ef2565b005b34801561023d57600080fd5b5061025860048036038101906102539190612493565b610f06565b005b34801561026657600080fd5b5061026f6113c7565b60405161027c91906124e2565b60405180910390f35b34801561029157600080fd5b5061029a6113ff565b6040516102a791906124fd565b60405180910390f35b3480156102bc57600080fd5b506102d760048036038101906102d2919061220d565b611438565b005b3480156102e557600080fd5b5061030060048036038101906102fb919061220d565b611659565b005b6000600260006103106116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546103659061254e565b80601f01602080910402602001604051908101604052809291908181526020018280546103919061254e565b80156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250509050600034826020015161043491906125ae565b905067016345785d8a0000811015610478576040517fa8ded35f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b828260000181905250808260200181815250506000826040018181525050600182608001901515908115158152505081600260006104b46116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610503919061278e565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505061054d6116df565b73ffffffffffffffffffffffffffffffffffffffff167f2e6a62283ed761c959aaa67da7e98c90c08118cadc35aae3c7b9d0b258a544058483604051610594929190612860565b60405180910390a2505050565b600015156106c9600260006105b46116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546106099061254e565b80601f01602080910402602001604051908101604052809291908181526020018280546106359061254e565b80156106825780601f1061065757610100808354040283529160200191610682565b820191906000526020600020905b81548152906001019060200180831161066557829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250506116e7565b151503610702576040517f84b90bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260006107106116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546107659061254e565b80601f01602080910402602001604051908101604052809291908181526020018280546107919061254e565b80156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090506000151561082f826116f8565b151503610868576040517feb533ee800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081600001519050600082602001519050600260006108866116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006108d19190611faf565b6001820160009055600282016000905560038201600090556004820160006101000a81549060ff021916905550506109076116df565b73ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561094c573d6000803e3d6000fd5b506109556116df565b73ffffffffffffffffffffffffffffffffffffffff167f2e6a62283ed761c959aaa67da7e98c90c08118cadc35aae3c7b9d0b258a54405838360405161099c929190612860565b60405180910390a2505050565b6109b1611717565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109fd61179e565b610a0682611884565b610a10828261188f565b5050565b60001515610b3c60026000610a276116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054610a7c9061254e565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa89061254e565b8015610af55780601f10610aca57610100808354040283529160200191610af5565b820191906000526020600020905b815481529060010190602001808311610ad857829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250506116e7565b151503610b75576040517f84b90bca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060026000610b836116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054610bd89061254e565b80601f0160208091040260200160405190810160405280929190818152602001828054610c049061254e565b8015610c515780601f10610c2657610100808354040283529160200191610c51565b820191906000526020600020905b815481529060010190602001808311610c3457829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090504281604001818152505060008160800190151590811515815250508060026000610cbd6116df565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610d0c919061278e565b5060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050610d566116df565b73ffffffffffffffffffffffffffffffffffffffff167f61003f58033bb3da9d31643101595ff5f23aead3167e68857530f74c4430582b60405160405180910390a250565b6000610da56119ae565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b6002602052806000526040600020600091509050806000018054610df19061254e565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1d9061254e565b8015610e6a5780601f10610e3f57610100808354040283529160200191610e6a565b820191906000526020600020905b815481529060010190602001808311610e4d57829003601f168201915b5050505050908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff169050919050565b610efa611717565b610f046000611a35565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f456116df565b73ffffffffffffffffffffffffffffffffffffffff1614610f92576040517fbc7b62d900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054610fee9061254e565b80601f016020809104026020016040519081016040528092919081815260200182805461101a9061254e565b80156110675780601f1061103c57610100808354040283529160200191611067565b820191906000526020600020905b81548152906001019060200180831161104a57829003601f168201915b505050505081526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff16151515158152505090506001816060018181516110be91906125ae565b915081815250506110ce81611b0c565b1580156110dc575080608001515b156110f35760008160800190151590811515815250505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbebe1ecc1c646675c6bd0423039fd8cdde200d8e4dac2b345abdc23bf8d97a6960405160405180910390a367016345785d8a0000816020015110156112c8576000816020015190506000826020018181525050600267016345785d8a000061118a91906128bf565b8110156111dd578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111d7573d6000803e3d6000fd5b506112c1565b8273ffffffffffffffffffffffffffffffffffffffff166108fc600267016345785d8a000061120c91906128bf565b9081150290604051600060405180830381858888f19350505050158015611237573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600267016345785d8a000061128991906128bf565b8361129491906128f0565b9081150290604051600060405180830381858888f193505050501580156112bf573d6000803e3d6000fd5b505b50506113c3565b67016345785d8a0000816020018181516112e291906128f0565b915081815250508173ffffffffffffffffffffffffffffffffffffffff166108fc600267016345785d8a000061131891906128bf565b9081150290604051600060405180830381858888f19350505050158015611343573d6000803e3d6000fd5b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600267016345785d8a000061139591906128bf565b9081150290604051600060405180830381858888f193505050501580156113c0573d6000803e3d6000fd5b50505b5050565b6000806113d2611b25565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b6000611442611b4d565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156114905750825b9050600060018367ffffffffffffffff161480156114c5575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156114d3575080155b1561150a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561155a5760018560000160086101000a81548160ff0219169083151502179055505b61156a6115656116df565b611b75565b611572611b89565b856000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061dead600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083156116515760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516116489190612973565b60405180910390a15b505050505050565b611661611717565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116d35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116ca91906124e2565b60405180910390fd5b6116dc81611a35565b50565b600033905090565b600080826020015114159050919050565b60006201518082604001514261170e91906128f0565b10159050919050565b61171f6116df565b73ffffffffffffffffffffffffffffffffffffffff1661173d6113c7565b73ffffffffffffffffffffffffffffffffffffffff161461179c576117606116df565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161179391906124e2565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061184b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611832611b93565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611882576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61188c611717565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118f757506040513d601f19601f820116820180604052508101906118f491906129ba565b60015b61193857816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161192f91906124e2565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b811461199f57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016119969190612350565b60405180910390fd5b6119a98383611bea565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611a33576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611a3f611b25565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600067016345785d8a0000826020015110159050919050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611b7d611c5d565b611b8681611c9d565b50565b611b91611c5d565b565b6000611bc17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611d23565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611bf382611d2d565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115611c5057611c4a8282611dfa565b50611c59565b611c58611e7e565b5b5050565b611c65611ebb565b611c9b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611ca5611c5d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d175760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611d0e91906124e2565b60405180910390fd5b611d2081611a35565b50565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b03611d8957806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611d8091906124e2565b60405180910390fd5b80611db67f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b611d23565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff1684604051611e249190612a2e565b600060405180830381855af49150503d8060008114611e5f576040519150601f19603f3d011682016040523d82523d6000602084013e611e64565b606091505b5091509150611e74858383611edb565b9250505092915050565b6000341115611eb9576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000611ec5611b4d565b60000160089054906101000a900460ff16905090565b606082611ef057611eeb82611f6a565b611f62565b60008251148015611f18575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15611f5a57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611f5191906124e2565b60405180910390fd5b819050611f63565b5b9392505050565b600081511115611f7d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508054611fbb9061254e565b6000825580601f10611fcd5750611fec565b601f016020900490600052602060002090810190611feb9190611fef565b5b50565b5b80821115612008576000816000905550600101611ff0565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120738261202a565b810181811067ffffffffffffffff821117156120925761209161203b565b5b80604052505050565b60006120a561200c565b90506120b1828261206a565b919050565b600067ffffffffffffffff8211156120d1576120d061203b565b5b6120da8261202a565b9050602081019050919050565b82818337600083830152505050565b6000612109612104846120b6565b61209b565b90508281526020810184848401111561212557612124612025565b5b6121308482856120e7565b509392505050565b600082601f83011261214d5761214c612020565b5b813561215d8482602086016120f6565b91505092915050565b60006020828403121561217c5761217b612016565b5b600082013567ffffffffffffffff81111561219a5761219961201b565b5b6121a684828501612138565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006121da826121af565b9050919050565b6121ea816121cf565b81146121f557600080fd5b50565b600081359050612207816121e1565b92915050565b60006020828403121561222357612222612016565b5b6000612231848285016121f8565b91505092915050565b600067ffffffffffffffff8211156122555761225461203b565b5b61225e8261202a565b9050602081019050919050565b600061227e6122798461223a565b61209b565b90508281526020810184848401111561229a57612299612025565b5b6122a58482856120e7565b509392505050565b600082601f8301126122c2576122c1612020565b5b81356122d284826020860161226b565b91505092915050565b600080604083850312156122f2576122f1612016565b5b6000612300858286016121f8565b925050602083013567ffffffffffffffff8111156123215761232061201b565b5b61232d858286016122ad565b9150509250929050565b6000819050919050565b61234a81612337565b82525050565b60006020820190506123656000830184612341565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123a557808201518184015260208101905061238a565b60008484015250505050565b60006123bc8261236b565b6123c68185612376565b93506123d6818560208601612387565b6123df8161202a565b840191505092915050565b6000819050919050565b6123fd816123ea565b82525050565b60008115159050919050565b61241881612403565b82525050565b600060a082019050818103600083015261243881886123b1565b905061244760208301876123f4565b61245460408301866123f4565b61246160608301856123f4565b61246e608083018461240f565b9695505050505050565b600060208201905061248d600083018461240f565b92915050565b600080604083850312156124aa576124a9612016565b5b60006124b8858286016121f8565b92505060206124c9858286016121f8565b9150509250929050565b6124dc816121cf565b82525050565b60006020820190506124f760008301846124d3565b92915050565b6000602082019050818103600083015261251781846123b1565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061256657607f821691505b6020821081036125795761257861251f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125b9826123ea565b91506125c4836123ea565b92508282019050808211156125dc576125db61257f565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126447fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612607565b61264e8683612607565b95508019841693508086168417925050509392505050565b6000819050919050565b600061268b612686612681846123ea565b612666565b6123ea565b9050919050565b6000819050919050565b6126a583612670565b6126b96126b182612692565b848454612614565b825550505050565b600090565b6126ce6126c1565b6126d981848461269c565b505050565b5b818110156126fd576126f26000826126c6565b6001810190506126df565b5050565b601f82111561274257612713816125e2565b61271c846125f7565b8101602085101561272b578190505b61273f612737856125f7565b8301826126de565b50505b505050565b600082821c905092915050565b600061276560001984600802612747565b1980831691505092915050565b600061277e8383612754565b9150826002028217905092915050565b6127978261236b565b67ffffffffffffffff8111156127b0576127af61203b565b5b6127ba825461254e565b6127c5828285612701565b600060209050601f8311600181146127f857600084156127e6578287015190505b6127f08582612772565b865550612858565b601f198416612806866125e2565b60005b8281101561282e57848901518255600182019150602085019450602081019050612809565b8683101561284b5784890151612847601f891682612754565b8355505b6001600288020188555050505b505050505050565b6000604082019050818103600083015261287a81856123b1565b905061288960208301846123f4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006128ca826123ea565b91506128d5836123ea565b9250826128e5576128e4612890565b5b828204905092915050565b60006128fb826123ea565b9150612906836123ea565b925082820390508181111561291e5761291d61257f565b5b92915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061295d61295861295384612924565b612666565b61292e565b9050919050565b61296d81612942565b82525050565b60006020820190506129886000830184612964565b92915050565b61299781612337565b81146129a257600080fd5b50565b6000815190506129b48161298e565b92915050565b6000602082840312156129d0576129cf612016565b5b60006129de848285016129a5565b91505092915050565b600081519050919050565b600081905092915050565b6000612a08826129e7565b612a1281856129f2565b9350612a22818560208601612387565b80840191505092915050565b6000612a3a82846129fd565b91508190509291505056fea264697066735822122017010ad4678a01e339e46386e5fe9e09b5ea2c41194ec6c503e521263422296d64736f6c63430008180033";

type BlockBuilderRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockBuilderRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlockBuilderRegistry__factory extends ContractFactory {
  constructor(...args: BlockBuilderRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BlockBuilderRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BlockBuilderRegistry__factory {
    return super.connect(runner) as BlockBuilderRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockBuilderRegistryInterface {
    return new Interface(_abi) as BlockBuilderRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BlockBuilderRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BlockBuilderRegistry;
  }
}
